(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("React"), require("ReactDOM"), require("_"), require("d3"), require("jQuery"));
	else if(typeof define === 'function' && define.amd)
		define(["React", "ReactDOM", "_", "d3", "jQuery"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("React"), require("ReactDOM"), require("_"), require("d3"), require("jQuery")) : factory(root["React"], root["ReactDOM"], root["_"], root["d3"], root["jQuery"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_12__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar React = __webpack_require__(8);\nvar ReactDOM = __webpack_require__(9);\nvar LineUp_1 = __webpack_require__(7);\n;\n/**\n * Thin wrapper around LineUp\n */\nvar LineUp = (function (_super) {\n    __extends(LineUp, _super);\n    function LineUp() {\n        _super.apply(this, arguments);\n    }\n    LineUp.prototype.componentDidMount = function () {\n        this.node = ReactDOM.findDOMNode(this);\n        this.lineup = new LineUp_1.LineUp($(this.node));\n        this.renderContent();\n    };\n    LineUp.prototype.componentWillReceiveProps = function (newProps) {\n        this.renderContent(newProps);\n    };\n    /**\n     * Renders this component\n     */\n    LineUp.prototype.render = function () {\n        return React.createElement(\"div\", {\"style\": { width: \"100%\", height: \"100%\" }});\n    };\n    LineUp.prototype.renderContent = function (props) {\n        // if called from `componentWillReceiveProps`, then we use the new\n        // props, otherwise use what we already have.\n        props = props || this.props;\n        this.lineup.settings = this.getSettingsFromProps(props);\n        this.lineup.selectionEnabled = !!props.selectable;\n        if (props.rows && props.cols) {\n            this.lineup.setData(/*props.cols, */ props.rows);\n        }\n        if (this.selectionListener) {\n            this.selectionListener.destroy();\n        }\n        if (props.onSelectionChanged) {\n            this.selectionListener = this.lineup.events.on(\"selectionChanged\", function (rows) { return props.onSelectionChanged(rows); });\n        }\n        else if (this.selectionListener) {\n            this.selectionListener.destroy();\n        }\n        if (props.onCanLoadMoreData) {\n            this.canLoadListener = this.lineup.events.on(\"canLoadMoreData\", function (options) { return props.onCanLoadMoreData(options); });\n        }\n        else if (this.canLoadListener) {\n            this.canLoadListener.destroy();\n        }\n    };\n    /**\n     * Converts the lineup props to settings\n     */\n    LineUp.prototype.getSettingsFromProps = function (props) {\n        return {\n            selection: {\n                singleSelect: props.singleSelect,\n                multiSelect: props.multiSelect,\n            },\n            presentation: {\n                values: props.showValues,\n                stacked: props.showStacked,\n                histograms: props.showHistograms,\n                animation: props.showAnimations,\n            },\n        };\n    };\n    return LineUp;\n})(React.Component);\nexports.LineUp = LineUp;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./visuals/lineup/LineUpReact.tsx\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./visuals/lineup/LineUpReact.tsx?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {\"use strict\";\n\nvar nextTick = __webpack_require__(3).nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  timeout.close();\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\nTimeout.prototype.close = function () {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function (fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function (id) {\n  delete immediateIds[id];\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).setImmediate, __webpack_require__(1).clearImmediate))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/timers-browserify/main.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/timers-browserify/main.js?");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global, setImmediate) {/**\n * @license\n * Lo-Dash 1.0.2 (Custom Build) <http://lodash.com/>\n * Build: `lodash -o ./dist/lodash.compat.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */'use strict';;(function(window,undefined){ /** Detect free variable `exports` */var freeExports=typeof exports == 'object' && exports; /** Detect free variable `module` */var freeModule=typeof module == 'object' && module && module.exports == freeExports && module; /** Detect free variable `global` and use it as `window` */var freeGlobal=typeof global == 'object' && global;if(freeGlobal.global === freeGlobal){window = freeGlobal;} /** Used for array and object method references */var arrayRef=[],objectRef={}; /** Used to generate unique IDs */var idCounter=0; /** Used internally to indicate various things */var indicatorObject=objectRef; /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */var largeArraySize=30; /** Used to restore the original `_` reference in `noConflict` */var oldDash=window._; /** Used to match HTML entities */var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g; /** Used to match empty string literals in compiled template source */var reEmptyStringLeading=/\\b__p \\+= '';/g,reEmptyStringMiddle=/\\b(__p \\+=) '' \\+/g,reEmptyStringTrailing=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g; /** Used to match regexp flags from their coerced string values */var reFlags=/\\w*$/; /** Used to detect if a method is native */var reNative=RegExp('^' + (objectRef.valueOf + '').replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&').replace(/valueOf|for [^\\]]+/g,'.+?') + '$'); /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6\n   */var reEsTemplate=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g; /** Used to match \"interpolate\" template delimiters */var reInterpolate=/<%=([\\s\\S]+?)%>/g; /** Used to ensure capturing order of template delimiters */var reNoMatch=/($^)/; /** Used to match HTML characters */var reUnescapedHtml=/[&<>\"']/g; /** Used to match unescaped characters in compiled string literals */var reUnescapedString=/['\\n\\r\\t\\u2028\\u2029\\\\]/g; /** Used to fix the JScript [[DontEnum]] bug */var shadowed=['constructor','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','toLocaleString','toString','valueOf']; /** Used to make template sourceURLs easier to identify */var templateCounter=0; /** Native method shortcuts */var ceil=Math.ceil,concat=arrayRef.concat,floor=Math.floor,getPrototypeOf=reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,hasOwnProperty=objectRef.hasOwnProperty,push=arrayRef.push,toString=objectRef.toString; /* Native method shortcuts for methods with the same name as other `lodash` methods */var nativeBind=reNative.test(nativeBind = slice.bind) && nativeBind,nativeIsArray=reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,nativeIsFinite=window.isFinite,nativeIsNaN=window.isNaN,nativeKeys=reNative.test(nativeKeys = Object.keys) && nativeKeys,nativeMax=Math.max,nativeMin=Math.min,nativeRandom=Math.random; /** `Object#toString` result shortcuts */var argsClass='[object Arguments]',arrayClass='[object Array]',boolClass='[object Boolean]',dateClass='[object Date]',funcClass='[object Function]',numberClass='[object Number]',objectClass='[object Object]',regexpClass='[object RegExp]',stringClass='[object String]'; /** Detect various environments */var isIeOpera=!!window.attachEvent,isV8=nativeBind && !/\\n|true/.test(nativeBind + isIeOpera); /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */var isBindFast=nativeBind && !isV8; /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */var isKeysFast=nativeKeys && (isIeOpera || isV8); /**\n   * Detect the JScript [[DontEnum]] bug:\n   *\n   * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n   * made non-enumerable as well.\n   */var hasDontEnumBug; /**\n   * Detect if a `prototype` properties are enumerable by default:\n   *\n   * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n   * (if the prototype or a property on the prototype has been set)\n   * incorrectly sets a function's `prototype` property [[Enumerable]]\n   * value to `true`.\n   */var hasEnumPrototype; /** Detect if own properties are iterated after inherited properties (IE < 9) */var iteratesOwnLast; /**\n   * Detect if `Array#shift` and `Array#splice` augment array-like objects\n   * incorrectly:\n   *\n   * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n   * and `splice()` functions that fail to remove the last element, `value[0]`,\n   * of array-like objects even though the `length` property is set to `0`.\n   * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n   * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n   */var hasObjectSpliceBug=(hasObjectSpliceBug = {'0':1,'length':1},arrayRef.splice.call(hasObjectSpliceBug,0,1),hasObjectSpliceBug[0]); /** Detect if `arguments` object indexes are non-enumerable (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1) */var nonEnumArgs=true;(function(){var props=[];function ctor(){this.x = 1;}ctor.prototype = {'valueOf':1,'y':1};for(var prop in new ctor()) {props.push(prop);}for(prop in arguments) {nonEnumArgs = !prop;}hasDontEnumBug = !/valueOf/.test(props);hasEnumPrototype = ctor.propertyIsEnumerable('prototype');iteratesOwnLast = props[0] != 'x';})(1); /** Detect if `arguments` objects are `Object` objects (all but Opera < 10.5) */var argsAreObjects=arguments.constructor == Object; /** Detect if `arguments` objects [[Class]] is unresolvable (Firefox < 4, IE < 9) */var noArgsClass=!isArguments(arguments); /**\n   * Detect lack of support for accessing string characters by index:\n   *\n   * IE < 8 can't access characters by index and IE 8 can only access\n   * characters by index on string literals.\n   */var noCharByIndex='x'[0] + Object('x')[0] != 'xx'; /**\n   * Detect if a DOM node's [[Class]] is unresolvable (IE < 9)\n   * and that the JS engine won't error when attempting to coerce an object to\n   * a string without a `toString` function.\n   */try{var noNodeClass=toString.call(document) == objectClass && !({'toString':0} + '');}catch(e) {} /** Used to identify object classifications that `_.clone` supports */var cloneableClasses={};cloneableClasses[funcClass] = false;cloneableClasses[argsClass] = cloneableClasses[arrayClass] = cloneableClasses[boolClass] = cloneableClasses[dateClass] = cloneableClasses[numberClass] = cloneableClasses[objectClass] = cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true; /** Used to lookup a built-in constructor by [[Class]] */var ctorByClass={};ctorByClass[arrayClass] = Array;ctorByClass[boolClass] = Boolean;ctorByClass[dateClass] = Date;ctorByClass[objectClass] = Object;ctorByClass[numberClass] = Number;ctorByClass[regexpClass] = RegExp;ctorByClass[stringClass] = String; /** Used to determine if values are of the language type Object */var objectTypes={'boolean':false,'function':true,'object':true,'number':false,'string':false,'undefined':false}; /** Used to escape characters for inclusion in compiled string literals */var stringEscapes={'\\\\':'\\\\',\"'\":\"'\",'\\n':'n','\\r':'r','\\t':'t','\\u2028':'u2028','\\u2029':'u2029'}; /*--------------------------------------------------------------------------*/ /**\n   * Creates a `lodash` object, that wraps the given `value`, to enable method\n   * chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`, `compose`,\n   * `concat`, `countBy`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n   * `filter`, `flatten`, `forEach`, `forIn`, `forOwn`, `functions`, `groupBy`,\n   * `initial`, `intersection`, `invert`, `invoke`, `keys`, `map`, `max`, `memoize`,\n   * `merge`, `min`, `object`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n   * `pick`, `pluck`, `push`, `range`, `reject`, `rest`, `reverse`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`,\n   * `union`, `uniq`, `unshift`, `values`, `where`, `without`, `wrap`, and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`,\n   * `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n   * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`, `lastIndexOf`,\n   * `mixin`, `noConflict`, `pop`, `random`, `reduce`, `reduceRight`, `result`,\n   * `shift`, `size`, `some`, `sortedIndex`, `template`, `unescape`, and `uniqueId`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * passed, otherwise they return unwrapped values.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {Mixed} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   */function lodash(value){ // exit early if already wrapped, even if wrapped by a different `lodash` constructor\nif(value && typeof value == 'object' && value.__wrapped__){return value;} // allow invoking `lodash` without the `new` operator\nif(!(this instanceof lodash)){return new lodash(value);}this.__wrapped__ = value;} /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */lodash.templateSettings = { /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */'escape':/<%-([\\s\\S]+?)%>/g, /**\n     * Used to detect code to be evaluated.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */'evaluate':/<%([\\s\\S]+?)%>/g, /**\n     * Used to detect `data` property values to inject.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */'interpolate':reInterpolate, /**\n     * Used to reference the data object in the template text.\n     *\n     * @memberOf _.templateSettings\n     * @type String\n     */'variable':'', /**\n     * Used to import variables into the compiled template.\n     *\n     * @memberOf _.templateSettings\n     * @type Object\n     */'imports':{ /**\n       * A reference to the `lodash` function.\n       *\n       * @memberOf _.templateSettings.imports\n       * @type Function\n       */'_':lodash}}; /*--------------------------------------------------------------------------*/ /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Obect} data The data object used to populate the text.\n   * @returns {String} Returns the interpolated text.\n   */var iteratorTemplate=function iteratorTemplate(obj){var __p='var index, iterable = ' + obj.firstArg + ', result = iterable;\\nif (!iterable) return result;\\n' + obj.top + ';\\n';if(obj.arrays){__p += 'var length = iterable.length; index = -1;\\nif (' + obj.arrays + ') {  ';if(obj.noCharByIndex){__p += '\\n  if (isString(iterable)) {\\n    iterable = iterable.split(\\'\\')\\n  }  ';};__p += '\\n  while (++index < length) {\\n    ' + obj.loop + '\\n  }\\n}\\nelse {  ';}else if(obj.nonEnumArgs){__p += '\\n  var length = iterable.length; index = -1;\\n  if (length && isArguments(iterable)) {\\n    while (++index < length) {\\n      index += \\'\\';\\n      ' + obj.loop + '\\n    }\\n  } else {  ';};if(obj.hasEnumPrototype){__p += '\\n  var skipProto = typeof iterable == \\'function\\';\\n  ';};if(obj.isKeysFast && obj.useHas){__p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] ? nativeKeys(iterable) : [],\\n      length = ownProps.length;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n    ';if(obj.hasEnumPrototype){__p += 'if (!(skipProto && index == \\'prototype\\')) {\\n  ';};__p += obj.loop + '';if(obj.hasEnumPrototype){__p += '}\\n';};__p += '  }  ';}else {__p += '\\n  for (index in iterable) {';if(obj.hasEnumPrototype || obj.useHas){__p += '\\n    if (';if(obj.hasEnumPrototype){__p += '!(skipProto && index == \\'prototype\\')';}if(obj.hasEnumPrototype && obj.useHas){__p += ' && ';}if(obj.useHas){__p += 'hasOwnProperty.call(iterable, index)';};__p += ') {    ';};__p += obj.loop + ';    ';if(obj.hasEnumPrototype || obj.useHas){__p += '\\n    }';};__p += '\\n  }  ';};if(obj.hasDontEnumBug){__p += '\\n\\n  var ctor = iterable.constructor;\\n    ';for(var k=0;k < 7;k++) {__p += '\\n  index = \\'' + obj.shadowed[k] + '\\';\\n  if (';if(obj.shadowed[k] == 'constructor'){__p += '!(ctor && ctor.prototype === iterable) && ';};__p += 'hasOwnProperty.call(iterable, index)) {\\n    ' + obj.loop + '\\n  }    ';};};if(obj.arrays || obj.nonEnumArgs){__p += '\\n}';};__p += obj.bottom + ';\\nreturn result';return __p;}; /** Reusable iterator options for `assign` and `defaults` */var defaultsIteratorOptions={'args':'object, source, guard','top':'var args = arguments,\\n' + '    argsIndex = 0,\\n' + \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" + 'while (++argsIndex < argsLength) {\\n' + '  iterable = args[argsIndex];\\n' + '  if (iterable && objectTypes[typeof iterable]) {','loop':\"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",'bottom':'  }\\n}'}; /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */var eachIteratorOptions={'args':'collection, callback, thisArg','top':\"callback = callback && typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg)\",'arrays':\"typeof length == 'number'\",'loop':'if (callback(iterable[index], index, collection) === false) return result'}; /** Reusable iterator options for `forIn` and `forOwn` */var forOwnIteratorOptions={'top':'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,'arrays':false}; /*--------------------------------------------------------------------------*/ /**\n   * Creates a function optimized to search large arrays for a given `value`,\n   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @param {Number} [largeSize=30] The length at which an array is considered large.\n   * @returns {Boolean} Returns `true`, if `value` is found, else `false`.\n   */function cachedContains(array,fromIndex,largeSize){fromIndex || (fromIndex = 0);var length=array.length,isLarge=length - fromIndex >= (largeSize || largeArraySize);if(isLarge){var cache={},index=fromIndex - 1;while(++index < length) { // manually coerce `value` to a string because `hasOwnProperty`, in some\n// older versions of Firefox, coerces objects incorrectly\nvar key=array[index] + '';(hasOwnProperty.call(cache,key)?cache[key]:cache[key] = []).push(array[index]);}}return function(value){if(isLarge){var key=value + '';return hasOwnProperty.call(cache,key) && indexOf(cache[key],value) > -1;}return indexOf(array,value,fromIndex) > -1;};} /**\n   * Used by `_.max` and `_.min` as the default `callback` when a given\n   * `collection` is a string value.\n   *\n   * @private\n   * @param {String} value The character to inspect.\n   * @returns {Number} Returns the code unit of given character.\n   */function charAtCallback(value){return value.charCodeAt(0);} /**\n   * Used by `sortBy` to compare transformed `collection` values, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {Number} Returns the sort order indicator of `1` or `-1`.\n   */function compareAscending(a,b){var ai=a.index,bi=b.index;a = a.criteria;b = b.criteria; // ensure a stable sort in V8 and other engines\n// http://code.google.com/p/v8/issues/detail?id=90\nif(a !== b){if(a > b || typeof a == 'undefined'){return 1;}if(a < b || typeof b == 'undefined'){return -1;}}return ai < bi?-1:1;} /**\n   * Creates a function that, when called, invokes `func` with the `this` binding\n   * of `thisArg` and prepends any `partialArgs` to the arguments passed to the\n   * bound function.\n   *\n   * @private\n   * @param {Function|String} func The function to bind or the method name.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Array} partialArgs An array of arguments to be partially applied.\n   * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n   * @returns {Function} Returns the new bound function.\n   */function createBound(func,thisArg,partialArgs,rightIndicator){var isFunc=isFunction(func),isPartial=!partialArgs,key=thisArg; // juggle arguments\nif(isPartial){partialArgs = thisArg;}if(!isFunc){thisArg = func;}function bound(){ // `Function#bind` spec\n// http://es5.github.com/#x15.3.4.5\nvar args=arguments,thisBinding=isPartial?this:thisArg;if(!isFunc){func = thisArg[key];}if(partialArgs.length){args = args.length?(args = slice(args),rightIndicator?args.concat(partialArgs):partialArgs.concat(args)):partialArgs;}if(this instanceof bound){ // ensure `new bound` is an instance of `bound` and `func`\nnoop.prototype = func.prototype;thisBinding = new noop();noop.prototype = null; // mimic the constructor's `return` behavior\n// http://es5.github.com/#x13.2.2\nvar result=func.apply(thisBinding,args);return isObject(result)?result:thisBinding;}return func.apply(thisBinding,args);}return bound;} /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name, the created callback will return the property value for a given element.\n   * If `func` is an object, the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @private\n   * @param {Mixed} [func=identity] The value to convert to a callback.\n   * @param {Mixed} [thisArg] The `this` binding of the created callback.\n   * @param {Number} [argCount=3] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */function createCallback(func,thisArg,argCount){if(func == null){return identity;}var type=typeof func;if(type != 'function'){if(type != 'object'){return function(object){return object[func];};}var props=keys(func);return function(object){var length=props.length,result=false;while(length--) {if(!(result = isEqual(object[props[length]],func[props[length]],indicatorObject))){break;}}return result;};}if(typeof thisArg != 'undefined'){if(argCount === 1){return function(value){return func.call(thisArg,value);};}if(argCount === 2){return function(a,b){return func.call(thisArg,a,b);};}if(argCount === 4){return function(accumulator,value,index,object){return func.call(thisArg,accumulator,value,index,object);};}return function(value,index,object){return func.call(thisArg,value,index,object);};}return func;} /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {Object} [options1, options2, ...] The compile options object(s).\n   *  arrays - A string of code to determine if the iterable is an array or array-like.\n   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n   *  args - A string of comma separated arguments the iteration function will accept.\n   *  top - A string of code to execute before the iteration branches.\n   *  loop - A string of code to execute in the object loop.\n   *  bottom - A string of code to execute after the iteration branches.\n   *\n   * @returns {Function} Returns the compiled function.\n   */function createIterator(){var data={ // support properties\n'hasDontEnumBug':hasDontEnumBug,'hasEnumPrototype':hasEnumPrototype,'isKeysFast':isKeysFast,'nonEnumArgs':nonEnumArgs,'noCharByIndex':noCharByIndex,'shadowed':shadowed, // iterator options\n'arrays':'isArray(iterable)','bottom':'','loop':'','top':'','useHas':true}; // merge options into a template data object\nfor(var object,index=0;object = arguments[index];index++) {for(var key in object) {data[key] = object[key];}}var args=data.args;data.firstArg = /^[^,]+/.exec(args)[0]; // create the function factory\nvar factory=Function('createCallback, hasOwnProperty, isArguments, isArray, isString, ' + 'objectTypes, nativeKeys','return function(' + args + ') {\\n' + iteratorTemplate(data) + '\\n}'); // return the compiled function\nreturn factory(createCallback,hasOwnProperty,isArguments,isArray,isString,objectTypes,nativeKeys);} /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the `callback` for each\n   * element in the `collection`. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   */var each=createIterator(eachIteratorOptions); /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */function escapeStringChar(match){return '\\\\' + stringEscapes[match];} /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */function escapeHtmlChar(match){return htmlEscapes[match];} /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */function isNode(value){ // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n// methods that are `typeof` \"string\" and still can coerce nodes to strings\nreturn typeof value.toString != 'function' && typeof (value + '') == 'string';} /**\n   * A no-operation function.\n   *\n   * @private\n   */function noop(){} // no operation performed\n/**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used, instead of `Array#slice`, to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|String} collection The collection to slice.\n   * @param {Number} start The start index.\n   * @param {Number} end The end index.\n   * @returns {Array} Returns the new array.\n   */function slice(array,start,end){start || (start = 0);if(typeof end == 'undefined'){end = array?array.length:0;}var index=-1,length=end - start || 0,result=Array(length < 0?0:length);while(++index < length) {result[index] = array[start + index];}return result;} /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {String} match The matched character to unescape.\n   * @returns {String} Returns the unescaped character.\n   */function unescapeHtmlChar(match){return htmlUnescapes[match];} /*--------------------------------------------------------------------------*/ /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */function isArguments(value){return toString.call(value) == argsClass;} // fallback for browsers that can't detect `arguments` objects by [[Class]]\nif(noArgsClass){isArguments = function(value){return value?hasOwnProperty.call(value,'callee'):false;};} /**\n   * Iterates over `object`'s own and inherited enumerable properties, executing\n   * the `callback` for each property. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n   * early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   alert('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   alert(key);\n   * });\n   * // => alerts 'name' and 'bark' (order is not guaranteed)\n   */var forIn=createIterator(eachIteratorOptions,forOwnIteratorOptions,{'useHas':false}); /**\n   * Iterates over an object's own enumerable properties, executing the `callback`\n   * for each property. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   alert(key);\n   * });\n   * // => alerts '0', '1', and 'length' (order is not guaranteed)\n   */var forOwn=createIterator(eachIteratorOptions,forOwnIteratorOptions); /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */var isArray=nativeIsArray || function(value){ // `instanceof` may cause a memory leak in IE 7 if `value` is a host object\n// http://ajaxian.com/archives/working-aroung-the-instanceof-memory-leak\nreturn argsAreObjects && value instanceof Array || toString.call(value) == arrayClass;}; /**\n   * Creates an array composed of the own enumerable property names of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (order is not guaranteed)\n   */var keys=!nativeKeys?shimKeys:function(object){if(!isObject(object)){return [];}if(hasEnumPrototype && typeof object == 'function' || nonEnumArgs && object.length && isArguments(object)){return shimKeys(object);}return nativeKeys(object);}; /**\n   * A fallback implementation of `isPlainObject` that checks if a given `value`\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   */function shimIsPlainObject(value){ // avoid non-objects and false positives for `arguments` objects\nvar result=false;if(!(value && typeof value == 'object') || isArguments(value)){return result;} // check that the constructor is `Object` (i.e. `Object instanceof Object`)\nvar ctor=value.constructor;if(!isFunction(ctor) && (!noNodeClass || !isNode(value)) || ctor instanceof ctor){ // IE < 9 iterates inherited properties before own properties. If the first\n// iterated property is an object's own property then there are no inherited\n// enumerable properties.\nif(iteratesOwnLast){forIn(value,function(value,key,object){result = !hasOwnProperty.call(object,key);return false;});return result === false;} // In most environments an object's own properties are iterated before\n// its inherited properties. If the last iterated property is an object's\n// own property then there are no inherited enumerable properties.\nforIn(value,function(value,key){result = key;});return result === false || hasOwnProperty.call(value,result);}return result;} /**\n   * A fallback implementation of `Object.keys` that produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   */function shimKeys(object){var result=[];forOwn(object,function(value,key){result.push(key);});return result;} /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;',\"'\":'&#39;'}; /** Used to convert HTML entities to characters */var htmlUnescapes=invert(htmlEscapes); /*--------------------------------------------------------------------------*/ /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources. If a `callback` function is passed, it will be executed to produce\n   * the assigned values. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var food = { 'name': 'apple' };\n   * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */var assign=createIterator(defaultsIteratorOptions,{'top':defaultsIteratorOptions.top.replace(';',';\\n' + \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" + '  var callback = createCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' + \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" + '  callback = args[--argsLength];\\n' + '}'),'loop':'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'}); /**\n   * Creates a clone of `value`. If `deep` is `true`, nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a `callback`\n   * function is passed, it will be executed to produce the cloned values. If\n   * `callback` returns `undefined`, cloning will be handled by the method instead.\n   * The `callback` is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to clone.\n   * @param {Boolean} [deep=false] A flag to indicate a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate clones with source counterparts.\n   * @returns {Mixed} Returns the cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */function clone(value,deep,callback,thisArg,stackA,stackB){var result=value; // allows working with \"Collections\" methods without using their `callback`\n// argument, `index|key`, for this method's `callback`\nif(typeof deep == 'function'){thisArg = callback;callback = deep;deep = false;}if(typeof callback == 'function'){callback = typeof thisArg == 'undefined'?callback:createCallback(callback,thisArg,1);result = callback(result);var done=typeof result != 'undefined';if(!done){result = value;}} // inspect [[Class]]\nvar isObj=isObject(result);if(isObj){var className=toString.call(result);if(!cloneableClasses[className] || noNodeClass && isNode(result)){return result;}var isArr=isArray(result);} // shallow clone\nif(!isObj || !deep){return isObj && !done?isArr?slice(result):assign({},result):result;}var ctor=ctorByClass[className];switch(className){case boolClass:case dateClass:return done?result:new ctor(+result);case numberClass:case stringClass:return done?result:new ctor(result);case regexpClass:return done?result:ctor(result.source,reFlags.exec(result));} // check for circular references and return corresponding clone\nstackA || (stackA = []);stackB || (stackB = []);var length=stackA.length;while(length--) {if(stackA[length] == value){return stackB[length];}} // init cloned object\nif(!done){result = isArr?ctor(result.length):{}; // add array properties assigned by `RegExp#exec`\nif(isArr){if(hasOwnProperty.call(value,'index')){result.index = value.index;}if(hasOwnProperty.call(value,'input')){result.input = value.input;}}} // add the source value to the stack of traversed objects\n// and associate it with its clone\nstackA.push(value);stackB.push(result); // recursively populate clone (susceptible to call stack limits)\n(isArr?forEach:forOwn)(done?result:value,function(objValue,key){result[key] = clone(objValue,deep,callback,undefined,stackA,stackB);});return result;} /**\n   * Creates a deep clone of `value`. If a `callback` function is passed, it will\n   * be executed to produce the cloned values. If `callback` returns the value it\n   * was passed, cloning will be handled by the method instead. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * Note: This function is loosely based on the structured clone algorithm. Functions\n   * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n   * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n   * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the deep cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var deep = _.cloneDeep(stooges);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * var view = {\n   *   'label': 'docs',\n   *   'node': element\n   * };\n   *\n   * var clone = _.cloneDeep(view, function(value) {\n   *   return _.isElement(value) ? value.cloneNode(true) : value;\n   * });\n   *\n   * clone.node == view.node;\n   * // => false\n   */function cloneDeep(value,callback,thisArg){return clone(value,true,callback,thisArg);} /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param- {Object} [guard] Internally used to allow working with `_.reduce`\n   *  without using its callback's `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var food = { 'name': 'apple' };\n   * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */var defaults=createIterator(defaultsIteratorOptions); /**\n   * Creates a sorted array of all enumerable properties, own and inherited,\n   * of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */function functions(object){var result=[];forIn(object,function(value,key){if(isFunction(value)){result.push(key);}});return result.sort();} /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {String} property The property to check for.\n   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */function has(object,property){return object?hasOwnProperty.call(object,property):false;} /**\n   * Creates an object composed of the inverted keys and values of the given `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'moe', 'second': 'larry' });\n   * // => { 'moe': 'first', 'larry': 'second' } (order is not guaranteed)\n   */function invert(object){var index=-1,props=keys(object),length=props.length,result={};while(++index < length) {var key=props[index];result[object[key]] = key;}return result;} /**\n   * Checks if `value` is a boolean value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */function isBoolean(value){return value === true || value === false || toString.call(value) == boolClass;} /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */function isDate(value){return value instanceof Date || toString.call(value) == dateClass;} /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */function isElement(value){return value?value.nodeType === 1:false;} /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|String} value The value to inspect.\n   * @returns {Boolean} Returns `true`, if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */function isEmpty(value){var result=true;if(!value){return result;}var className=toString.call(value),length=value.length;if(className == arrayClass || className == stringClass || className == argsClass || noArgsClass && isArguments(value) || className == objectClass && typeof length == 'number' && isFunction(value.splice)){return !length;}forOwn(value,function(){return result = false;});return result;} /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If `callback` is passed, it will be executed to\n   * compare values. If `callback` returns `undefined`, comparisons will be handled\n   * by the method instead. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} a The value to compare.\n   * @param {Mixed} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.\n   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.\n   * @returns {Boolean} Returns `true`, if the values are equvalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'age': 40 };\n   * var copy = { 'name': 'moe', 'age': 40 };\n   *\n   * moe == copy;\n   * // => false\n   *\n   * _.isEqual(moe, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */function isEqual(_x,_x2,_x3,_x4,_x5,_x6){var _again=true;_function: while(_again) {var a=_x,b=_x2,callback=_x3,thisArg=_x4,stackA=_x5,stackB=_x6;_again = false; // used to indicate that when comparing objects, `a` has at least the properties of `b`\nvar whereIndicator=callback === indicatorObject;if(callback && !whereIndicator){callback = typeof thisArg == 'undefined'?callback:createCallback(callback,thisArg,2);var result=callback(a,b);if(typeof result != 'undefined'){return !!result;}} // exit early for identical values\nif(a === b){ // treat `+0` vs. `-0` as not equal\nreturn a !== 0 || 1 / a == 1 / b;}var type=typeof a,otherType=typeof b; // exit early for unlike primitive values\nif(a === a && (!a || type != 'function' && type != 'object') && (!b || otherType != 'function' && otherType != 'object')){return false;} // exit early for `null` and `undefined`, avoiding ES3's Function#call behavior\n// http://es5.github.com/#x15.3.4.4\nif(a == null || b == null){return a === b;} // compare [[Class]] names\nvar className=toString.call(a),otherClass=toString.call(b);if(className == argsClass){className = objectClass;}if(otherClass == argsClass){otherClass = objectClass;}if(className != otherClass){return false;}switch(className){case boolClass:case dateClass: // coerce dates and booleans to numbers, dates to milliseconds and booleans\n// to `1` or `0`, treating invalid dates coerced to `NaN` as not equal\nreturn +a == +b;case numberClass: // treat `NaN` vs. `NaN` as equal\nreturn a != +a?b != +b // but treat `+0` vs. `-0` as not equal\n:a == 0?1 / a == 1 / b:a == +b;case regexpClass:case stringClass: // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)\n// treat string primitives and their corresponding object instances as equal\nreturn a == b + '';}var isArr=className == arrayClass;if(!isArr){ // unwrap any `lodash` wrapped values\nif(a.__wrapped__ || b.__wrapped__){_x = a.__wrapped__ || a;_x2 = b.__wrapped__ || b;_x3 = callback;_x4 = thisArg;_x5 = stackA;_x6 = stackB;_again = true;whereIndicator = result = type = otherType = className = otherClass = isArr = undefined;continue _function;} // exit for functions and DOM nodes\nif(className != objectClass || noNodeClass && (isNode(a) || isNode(b))){return false;} // in older versions of Opera, `arguments` objects have `Array` constructors\nvar ctorA=!argsAreObjects && isArguments(a)?Object:a.constructor,ctorB=!argsAreObjects && isArguments(b)?Object:b.constructor; // non `Object` object instances with different constructors are not equal\nif(ctorA != ctorB && !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB)){return false;}} // assume cyclic structures are equal\n// the algorithm for detecting cyclic structures is adapted from ES 5.1\n// section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)\nstackA || (stackA = []);stackB || (stackB = []);var length=stackA.length;while(length--) {if(stackA[length] == a){return stackB[length] == b;}}var size=0;result = true; // add `a` and `b` to the stack of traversed objects\nstackA.push(a);stackB.push(b); // recursively compare objects and arrays (susceptible to call stack limits)\nif(isArr){length = a.length;size = b.length; // compare lengths to determine if a deep comparison is necessary\nresult = size == a.length;if(!result && !whereIndicator){return result;} // deep compare the contents, ignoring non-numeric properties\nwhile(size--) {var index=length,value=b[size];if(whereIndicator){while(index--) {if(result = isEqual(a[index],value,callback,thisArg,stackA,stackB)){break;}}}else if(!(result = isEqual(a[size],value,callback,thisArg,stackA,stackB))){break;}}return result;} // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n// which, in this case, is more costly\nforIn(b,function(value,key,b){if(hasOwnProperty.call(b,key)){ // count the number of properties.\nsize++; // deep compare each property value.\nreturn result = hasOwnProperty.call(a,key) && isEqual(a[key],value,callback,thisArg,stackA,stackB);}});if(result && !whereIndicator){ // ensure both objects have the same number of properties\nforIn(a,function(value,key,a){if(hasOwnProperty.call(a,key)){ // `size` will be `-1` if `a` has more properties than `b`\nreturn result = --size > -1;}});}return result;}} /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite`, which will return true for\n   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is finite, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */function isFinite(value){return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));} /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */function isFunction(value){return typeof value == 'function';} // fallback for older versions of Chrome and Safari\nif(isFunction(/x/)){isFunction = function(value){return value instanceof Function || toString.call(value) == funcClass;};} /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */function isObject(value){ // check if the value is the ECMAScript language type of Object\n// http://es5.github.com/#x8\n// and avoid a V8 bug\n// http://code.google.com/p/v8/issues/detail?id=2291\nreturn value?objectTypes[typeof value]:false;} /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN`, which will return `true` for\n   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */function isNaN(value){ // `NaN` as a primitive is the only value that is not equal to itself\n// (perform the [[Class]] check first to avoid errors with some host objects in IE)\nreturn isNumber(value) && value != +value;} /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */function isNull(value){return value === null;} /**\n   * Checks if `value` is a number.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */function isNumber(value){return typeof value == 'number' || toString.call(value) == numberClass;} /**\n   * Checks if a given `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Stooge(name, age) {\n   *   this.name = name;\n   *   this.age = age;\n   * }\n   *\n   * _.isPlainObject(new Stooge('moe', 40));\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n   * // => true\n   */var isPlainObject=!getPrototypeOf?shimIsPlainObject:function(value){if(!(value && typeof value == 'object')){return false;}var valueOf=value.valueOf,objProto=typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);return objProto?value == objProto || getPrototypeOf(value) == objProto && !isArguments(value):shimIsPlainObject(value);}; /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */function isRegExp(value){return value instanceof RegExp || toString.call(value) == regexpClass;} /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */function isString(value){return typeof value == 'string' || toString.call(value) == stringClass;} /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */function isUndefined(value){return typeof value == 'undefined';} /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined`, into the destination object. Subsequent sources\n   * will overwrite propery assignments of previous sources. If a `callback` function\n   * is passed, it will be executed to produce the merged values of the destination\n   * and source properties. If `callback` returns `undefined`, merging will be\n   * handled by the method instead. The `callback` is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [deepIndicator] Internally used to indicate that `stackA`\n   *  and `stackB` are arrays of traversed objects instead of source objects.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate values with their\n   *  source counterparts.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'stooges': [\n   *     { 'name': 'moe' },\n   *     { 'name': 'larry' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'stooges': [\n   *     { 'age': 40 },\n   *     { 'age': 50 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'stooges': [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */function merge(object,source,deepIndicator){var args=arguments,index=0,length=2;if(!isObject(object)){return object;}if(deepIndicator === indicatorObject){var callback=args[3],stackA=args[4],stackB=args[5];}else {stackA = [];stackB = []; // allows working with `_.reduce` and `_.reduceRight` without\n// using their `callback` arguments, `index|key` and `collection`\nif(typeof deepIndicator != 'number'){length = args.length;}if(length > 3 && typeof args[length - 2] == 'function'){callback = createCallback(args[--length - 1],args[length--],2);}else if(length > 2 && typeof args[length - 1] == 'function'){callback = args[--length];}}while(++index < length) {(isArray(args[index])?forEach:forOwn)(args[index],function(source,key){var found,isArr,result=source,value=object[key];if(source && ((isArr = isArray(source)) || isPlainObject(source))){ // avoid merging previously merged cyclic sources\nvar stackLength=stackA.length;while(stackLength--) {if(found = stackA[stackLength] == source){value = stackB[stackLength];break;}}if(!found){value = isArr?isArray(value)?value:[]:isPlainObject(value)?value:{};if(callback){result = callback(value,source);if(typeof result != 'undefined'){value = result;}} // add `source` and associated `value` to the stack of traversed objects\nstackA.push(source);stackB.push(value); // recursively merge objects and arrays (susceptible to call stack limits)\nif(!callback){value = merge(value,source,indicatorObject,callback,stackA,stackB);}}}else {if(callback){result = callback(value,source);if(typeof result == 'undefined'){result = source;}}if(typeof result != 'undefined'){value = result;}}object[key] = value;});}return object;} /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a `callback` function is passed, it will be executed\n   * for each property in the `object`, omitting the properties `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n   * // => { 'name': 'moe' }\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n   *   return typeof value == 'number';\n   * });\n   * // => { 'name': 'moe' }\n   */function omit(object,callback,thisArg){var isFunc=typeof callback == 'function',result={};if(isFunc){callback = createCallback(callback,thisArg);}else {var props=concat.apply(arrayRef,arguments);}forIn(object,function(value,key,object){if(isFunc?!callback(value,key,object):indexOf(props,key,1) < 0){result[key] = value;}});return result;} /**\n   * Creates a two dimensional array of the given object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40 });\n   * // => [['moe', 30], ['larry', 40]] (order is not guaranteed)\n   */function pairs(object){var index=-1,props=keys(object),length=props.length,result=Array(length);while(++index < length) {var key=props[index];result[index] = [key,object[key]];}return result;} /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of property\n   * names. If `callback` is passed, it will be executed for each property in the\n   * `object`, picking the properties `callback` returns truthy for. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called\n   *  per iteration or properties to pick, either as individual arguments or arrays.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n   * // => { 'name': 'moe' }\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */function pick(object,callback,thisArg){var result={};if(typeof callback != 'function'){var index=0,props=concat.apply(arrayRef,arguments),length=isObject(object)?props.length:0;while(++index < length) {var key=props[index];if(key in object){result[key] = object[key];}}}else {callback = createCallback(callback,thisArg);forIn(object,function(value,key,object){if(callback(value,key,object)){result[key] = value;}});}return result;} /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3]\n   */function values(object){var index=-1,props=keys(object),length=props.length,result=Array(length);while(++index < length) {result[index] = object[props[index]];}return result;} /*--------------------------------------------------------------------------*/ /**\n   * Creates an array of elements from the specified indexes, or keys, of the\n   * `collection`. Indexes may be specified as individual arguments or as arrays\n   * of indexes.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Array|Number|String} [index1, index2, ...] The indexes of\n   *  `collection` to retrieve, either as individual arguments or arrays.\n   * @returns {Array} Returns a new array of elements corresponding to the\n   *  provided indexes.\n   * @example\n   *\n   * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n   * // => ['a', 'c', 'e']\n   *\n   * _.at(['moe', 'larry', 'curly'], 0, 2);\n   * // => ['moe', 'curly']\n   */function at(collection){var index=-1,props=concat.apply(arrayRef,slice(arguments,1)),length=props.length,result=Array(length);if(noCharByIndex && isString(collection)){collection = collection.split('');}while(++index < length) {result[index] = collection[props[index]];}return result;} /**\n   * Checks if a given `target` element is present in a `collection` using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Mixed} target The value to check for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */function contains(collection,target,fromIndex){var index=-1,length=collection?collection.length:0,result=false;fromIndex = (fromIndex < 0?nativeMax(0,length + fromIndex):fromIndex) || 0;if(typeof length == 'number'){result = (isString(collection)?collection.indexOf(target,fromIndex):indexOf(collection,target,fromIndex)) > -1;}else {each(collection,function(value){if(++index >= fromIndex){return !(result = value === target);}});}return result;} /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the given `callback`. The corresponding value of each key\n   * is the number of times the key was returned by the `callback`. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */function countBy(collection,callback,thisArg){var result={};callback = createCallback(callback,thisArg);forEach(collection,function(value,key,collection){key = callback(value,key,collection) + '';hasOwnProperty.call(result,key)?result[key]++:result[key] = 1;});return result;} /**\n   * Checks if the `callback` returns a truthy value for **all** elements of a\n   * `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if all elements pass the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.every(stooges, 'age');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.every(stooges, { 'age': 50 });\n   * // => false\n   */function every(collection,callback,thisArg){var result=true;callback = createCallback(callback,thisArg);if(isArray(collection)){var index=-1,length=collection.length;while(++index < length) {if(!(result = !!callback(collection[index],index,collection))){break;}}}else {each(collection,function(value,index,collection){return result = !!callback(value,index,collection);});}return result;} /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   */function filter(collection,callback,thisArg){var result=[];callback = createCallback(callback,thisArg);if(isArray(collection)){var index=-1,length=collection.length;while(++index < length) {var value=collection[index];if(callback(value,index,collection)){result.push(value);}}}else {each(collection,function(value,index,collection){if(callback(value,index,collection)){result.push(value);}});}return result;} /**\n   * Examines each element in a `collection`, returning the first that the `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the element that passed the callback check,\n   *  else `undefined`.\n   * @example\n   *\n   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => 2\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * var veggie = _.find(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * var healthy = _.find(food, 'organic');\n   * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }\n   */function find(collection,callback,thisArg){var result;callback = createCallback(callback,thisArg);forEach(collection,function(value,index,collection){if(callback(value,index,collection)){result = value;return false;}});return result;} /**\n   * Iterates over a `collection`, executing the `callback` for each element in\n   * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection). Callbacks may exit iteration early\n   * by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(alert).join(',');\n   * // => alerts each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n   * // => alerts each number value (order is not guaranteed)\n   */function forEach(collection,callback,thisArg){if(callback && typeof thisArg == 'undefined' && isArray(collection)){var index=-1,length=collection.length;while(++index < length) {if(callback(collection[index],index,collection) === false){break;}}}else {each(collection,callback,thisArg);}return collection;} /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the `callback`. The corresponding value of each key is\n   * an array of elements passed to `callback` that returned the key. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */function groupBy(collection,callback,thisArg){var result={};callback = createCallback(callback,thisArg);forEach(collection,function(value,key,collection){key = callback(value,key,collection) + '';(hasOwnProperty.call(result,key)?result[key]:result[key] = []).push(value);});return result;} /**\n   * Invokes the method named by `methodName` on each element in the `collection`,\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be passed to each invoked method. If `methodName` is a function, it will\n   * be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */function invoke(collection,methodName){var args=slice(arguments,2),index=-1,isFunc=typeof methodName == 'function',length=collection?collection.length:0,result=Array(typeof length == 'number'?length:0);forEach(collection,function(value){result[++index] = (isFunc?methodName:value[methodName]).apply(value,args);});return result;} /**\n   * Creates an array of values by running each element in the `collection`\n   * through the `callback`. The `callback` is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (order is not guaranteed)\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(stooges, 'name');\n   * // => ['moe', 'larry']\n   */function map(collection,callback,thisArg){var index=-1,length=collection?collection.length:0,result=Array(typeof length == 'number'?length:0);callback = createCallback(callback,thisArg);if(isArray(collection)){while(++index < length) {result[index] = callback(collection[index],index,collection);}}else {each(collection,function(value,key,collection){result[++index] = callback(value,key,collection);});}return result;} /**\n   * Retrieves the maximum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'larry', 'age': 50 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.max(stooges, 'age');\n   * // => { 'name': 'larry', 'age': 50 };\n   */function max(collection,callback,thisArg){var computed=-Infinity,result=computed;if(!callback && isArray(collection)){var index=-1,length=collection.length;while(++index < length) {var value=collection[index];if(value > result){result = value;}}}else {callback = !callback && isString(collection)?charAtCallback:createCallback(callback,thisArg);each(collection,function(value,index,collection){var current=callback(value,index,collection);if(current > computed){computed = current;result = value;}});}return result;} /**\n   * Retrieves the minimum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.min(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'moe', 'age': 40 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.min(stooges, 'age');\n   * // => { 'name': 'moe', 'age': 40 };\n   */function min(collection,callback,thisArg){var computed=Infinity,result=computed;if(!callback && isArray(collection)){var index=-1,length=collection.length;while(++index < length) {var value=collection[index];if(value < result){result = value;}}}else {callback = !callback && isString(collection)?charAtCallback:createCallback(callback,thisArg);each(collection,function(value,index,collection){var current=callback(value,index,collection);if(current < computed){computed = current;result = value;}});}return result;} /**\n   * Retrieves the value of a specified property from all elements in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {String} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry']\n   */var pluck=map; /**\n   * Reduces a `collection` to a value that is the accumulated result of running\n   * each element in the `collection` through the `callback`, where each successive\n   * `callback` execution consumes the return value of the previous execution.\n   * If `accumulator` is not passed, the first element of the `collection` will be\n   * used as the initial `accumulator` value. The `callback` is bound to `thisArg`\n   * and invoked with four arguments; (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n   *   result[key] = num * 3;\n   *   return result;\n   * }, {});\n   * // => { 'a': 3, 'b': 6, 'c': 9 }\n   */function reduce(collection,callback,accumulator,thisArg){var noaccum=arguments.length < 3;callback = createCallback(callback,thisArg,4);if(isArray(collection)){var index=-1,length=collection.length;if(noaccum){accumulator = collection[++index];}while(++index < length) {accumulator = callback(accumulator,collection[index],index,collection);}}else {each(collection,function(value,index,collection){accumulator = noaccum?(noaccum = false,value):callback(accumulator,value,index,collection);});}return accumulator;} /**\n   * This method is similar to `_.reduce`, except that it iterates over a\n   * `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */function reduceRight(collection,callback,accumulator,thisArg){var iterable=collection,length=collection?collection.length:0,noaccum=arguments.length < 3;if(typeof length != 'number'){var props=keys(collection);length = props.length;}else if(noCharByIndex && isString(collection)){iterable = collection.split('');}callback = createCallback(callback,thisArg,4);forEach(collection,function(value,index,collection){index = props?props[--length]:--length;accumulator = noaccum?(noaccum = false,iterable[index]):callback(accumulator,iterable[index],index,collection);});return accumulator;} /**\n   * The opposite of `_.filter`, this method returns the elements of a\n   * `collection` that `callback` does **not** return truthy for.\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that did **not** pass the\n   *  callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(food, 'organic');\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   */function reject(collection,callback,thisArg){callback = createCallback(callback,thisArg);return filter(collection,function(value,index,collection){return !callback(value,index,collection);});} /**\n   * Creates an array of shuffled `array` values, using a version of the\n   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */function shuffle(collection){var index=-1,length=collection?collection.length:0,result=Array(typeof length == 'number'?length:0);forEach(collection,function(value){var rand=floor(nativeRandom() * (++index + 1));result[index] = result[rand];result[rand] = value;});return result;} /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to inspect.\n   * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */function size(collection){var length=collection?collection.length:0;return typeof length == 'number'?length:keys(collection).length;} /**\n   * Checks if the `callback` returns a truthy value for **any** element of a\n   * `collection`. The function returns as soon as it finds passing value, and\n   * does not iterate over the entire `collection`. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if any element passes the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.some(food, 'organic');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.some(food, { 'type': 'meat' });\n   * // => false\n   */function some(collection,callback,thisArg){var result;callback = createCallback(callback,thisArg);if(isArray(collection)){var index=-1,length=collection.length;while(++index < length) {if(result = callback(collection[index],index,collection)){break;}}}else {each(collection,function(value,index,collection){return !(result = callback(value,index,collection));});}return !!result;} /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in the `collection` through the `callback`. This method\n   * performs a stable sort, that is, it will preserve the original sort order of\n   * equal elements. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n   * // => ['apple', 'banana', 'strawberry']\n   */function sortBy(collection,callback,thisArg){var index=-1,length=collection?collection.length:0,result=Array(typeof length == 'number'?length:0);callback = createCallback(callback,thisArg);forEach(collection,function(value,key,collection){result[++index] = {'criteria':callback(value,key,collection),'index':index,'value':value};});length = result.length;result.sort(compareAscending);while(length--) {result[length] = result[length].value;}return result;} /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */function toArray(collection){if(collection && typeof collection.length == 'number'){return noCharByIndex && isString(collection)?collection.split(''):slice(collection);}return values(collection);} /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * that have the given `properties`. When checking `properties`, this method\n   * performs a deep comparison between values to determine if they are equivalent\n   * to each other.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that have the given `properties`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40 }]\n   */var where=filter; /*--------------------------------------------------------------------------*/ /**\n   * Creates an array with all falsey values of `array` removed. The values\n   * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */function compact(array){var index=-1,length=array?array.length:0,result=[];while(++index < length) {var value=array[index];if(value){result.push(value);}}return result;} /**\n   * Creates an array of `array` elements not present in the other arrays\n   * using strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Array} [array1, array2, ...] Arrays to check.\n   * @returns {Array} Returns a new array of `array` elements not present in the\n   *  other arrays.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */function difference(array){var index=-1,length=array?array.length:0,flattened=concat.apply(arrayRef,arguments),contains=cachedContains(flattened,length),result=[];while(++index < length) {var value=array[index];if(!contains(value)){result.push(value);}}return result;} /**\n   * Gets the first element of the `array`. If a number `n` is passed, the first\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the first elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the first element(s) of `array`.\n   * @example\n   *\n   * _.first([1, 2, 3]);\n   * // => 1\n   *\n   * _.first([1, 2, 3], 2);\n   * // => [1, 2]\n   *\n   * _.first([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [1, 2]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.first(food, 'organic');\n   * // => [{ 'name': 'banana', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.first(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]\n   */function first(array,callback,thisArg){if(array){var n=0,length=array.length;if(typeof callback != 'number' && callback != null){var index=-1;callback = createCallback(callback,thisArg);while(++index < length && callback(array[index],index,array)) {n++;}}else {n = callback;if(n == null || thisArg){return array[0];}}return slice(array,0,nativeMin(nativeMax(0,n),length));}} /**\n   * Flattens a nested array (the nesting can be to any depth). If `shallow` is\n   * truthy, `array` will only be flattened a single level.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @param {Boolean} shallow A flag to indicate only flattening a single level.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   */function flatten(array,shallow){var index=-1,length=array?array.length:0,result=[];while(++index < length) {var value=array[index]; // recursively flatten arrays (susceptible to call stack limits)\nif(isArray(value)){push.apply(result,shallow?value:flatten(value));}else {result.push(value);}}return result;} /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the `array` is already\n   * sorted, passing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to\n   *  perform a binary search on a sorted `array`.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */function indexOf(array,value,fromIndex){var index=-1,length=array?array.length:0;if(typeof fromIndex == 'number'){index = (fromIndex < 0?nativeMax(0,length + fromIndex):fromIndex || 0) - 1;}else if(fromIndex){index = sortedIndex(array,value);return array[index] === value?index:-1;}while(++index < length) {if(array[index] === value){return index;}}return -1;} /**\n   * Gets all but the last element of `array`. If a number `n` is passed, the\n   * last `n` elements are excluded from the result. If a `callback` function\n   * is passed, the last elements the `callback` returns truthy for are excluded\n   * from the result. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.initial([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.initial([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.initial([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [1]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.initial(food, 'organic');\n   * // => [{ 'name': 'beet',   'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.initial(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'banana', 'type': 'fruit' }]\n   */function initial(array,callback,thisArg){if(!array){return [];}var n=0,length=array.length;if(typeof callback != 'number' && callback != null){var index=length;callback = createCallback(callback,thisArg);while(index-- && callback(array[index],index,array)) {n++;}}else {n = callback == null || thisArg?1:callback || n;}return slice(array,0,nativeMin(nativeMax(0,length - n),length));} /**\n   * Computes the intersection of all the passed-in arrays using strict equality\n   * for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique elements that are present\n   *  in **all** of the arrays.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */function intersection(array){var args=arguments,argsLength=args.length,cache={'0':{}},index=-1,length=array?array.length:0,isLarge=length >= 100,result=[],seen=result;outer: while(++index < length) {var value=array[index];if(isLarge){var key=value + '';var inited=hasOwnProperty.call(cache[0],key)?!(seen = cache[0][key]):seen = cache[0][key] = [];}if(inited || indexOf(seen,value) < 0){if(isLarge){seen.push(value);}var argsIndex=argsLength;while(--argsIndex) {if(!(cache[argsIndex] || (cache[argsIndex] = cachedContains(args[argsIndex],0,100)))(value)){continue outer;}}result.push(value);}}return result;} /**\n   * Gets the last element of the `array`. If a number `n` is passed, the last\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the last elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.last(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]\n   */function last(array,callback,thisArg){if(array){var n=0,length=array.length;if(typeof callback != 'number' && callback != null){var index=length;callback = createCallback(callback,thisArg);while(index-- && callback(array[index],index,array)) {n++;}}else {n = callback;if(n == null || thisArg){return array[length - 1];}}return slice(array,nativeMax(0,length - n));}} /**\n   * Gets the index at which the last occurrence of `value` is found using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=array.length-1] The index to search from.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */function lastIndexOf(array,value,fromIndex){var index=array?array.length:0;if(typeof fromIndex == 'number'){index = (fromIndex < 0?nativeMax(0,index + fromIndex):nativeMin(fromIndex,index - 1)) + 1;}while(index--) {if(array[index] === value){return index;}}return -1;} /**\n   * Creates an object composed from arrays of `keys` and `values`. Pass either\n   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n   * two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.object(['moe', 'larry'], [30, 40]);\n   * // => { 'moe': 30, 'larry': 40 }\n   */function object(keys,values){var index=-1,length=keys?keys.length:0,result={};while(++index < length) {var key=keys[index];if(values){result[key] = values[index];}else {result[key[0]] = key[1];}}return result;} /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Number} [start=0] The start of the range.\n   * @param {Number} end The end of the range.\n   * @param {Number} [step=1] The value to increment or descrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(0);\n   * // => []\n   */function range(start,end,step){start = +start || 0;step = +step || 1;if(end == null){end = start;start = 0;} // use `Array(length)` so V8 will avoid the slower \"dictionary\" mode\n// http://youtu.be/XAqIpGU8ZZk#t=17m25s\nvar index=-1,length=nativeMax(0,ceil((end - start) / step)),result=Array(length);while(++index < length) {result[index] = start;start += step;}return result;} /**\n   * The opposite of `_.initial`, this method gets all but the first value of `array`.\n   * If a number `n` is passed, the first `n` values are excluded from the result.\n   * If a `callback` function is passed, the first elements the `callback` returns\n   * truthy for are excluded from the result. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.rest([1, 2, 3]);\n   * // => [2, 3]\n   *\n   * _.rest([1, 2, 3], 2);\n   * // => [3]\n   *\n   * _.rest([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [3]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.rest(food, 'organic');\n   * // => [{ 'name': 'beet', 'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.rest(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }]\n   */function rest(array,callback,thisArg){if(typeof callback != 'number' && callback != null){var n=0,index=-1,length=array?array.length:0;callback = createCallback(callback,thisArg);while(++index < length && callback(array[index],index,array)) {n++;}}else {n = callback == null || thisArg?1:nativeMax(0,callback);}return slice(array,n);} /**\n   * Uses a binary search to determine the smallest index at which the `value`\n   * should be inserted into `array` in order to maintain the sort order of the\n   * sorted `array`. If `callback` is passed, it will be executed for `value` and\n   * each element in `array` to compute their sort ranking. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to iterate over.\n   * @param {Mixed} value The value to evaluate.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Number} Returns the index at which the value should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */function sortedIndex(array,value,callback,thisArg){var low=0,high=array?array.length:low; // explicitly reference `identity` for better inlining in Firefox\ncallback = callback?createCallback(callback,thisArg,1):identity;value = callback(value);while(low < high) {var mid=low + high >>> 1;callback(array[mid]) < value?low = mid + 1:high = mid;}return low;} /**\n   * Computes the union of the passed-in arrays using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique values, in order, that are\n   *  present in one or more of the arrays.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */function union(){return uniq(concat.apply(arrayRef,arguments));} /**\n   * Creates a duplicate-value-free version of the `array` using strict equality\n   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n   * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n   * element of `array` is passed through a callback` before uniqueness is computed.\n   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */function uniq(array,isSorted,callback,thisArg){var index=-1,length=array?array.length:0,result=[],seen=result; // juggle arguments\nif(typeof isSorted == 'function'){thisArg = callback;callback = isSorted;isSorted = false;} // init value cache for large arrays\nvar isLarge=!isSorted && length >= 75;if(isLarge){var cache={};}if(callback){seen = [];callback = createCallback(callback,thisArg);}while(++index < length) {var value=array[index],computed=callback?callback(value,index,array):value;if(isLarge){var key=computed + '';var inited=hasOwnProperty.call(cache,key)?!(seen = cache[key]):seen = cache[key] = [];}if(isSorted?!index || seen[seen.length - 1] !== computed:inited || indexOf(seen,computed) < 0){if(callback || isLarge){seen.push(computed);}result.push(value);}}return result;} /**\n   * Creates an array with all occurrences of the passed values removed using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {Mixed} [value1, value2, ...] Values to remove.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */function without(array){var index=-1,length=array?array.length:0,contains=cachedContains(arguments,1),result=[];while(++index < length) {var value=array[index];if(!contains(value)){result.push(value);}}return result;} /**\n   * Groups the elements of each array at their corresponding indexes. Useful for\n   * separate data sources that are coordinated through matching array indexes.\n   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n   * in a similar fashion.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n   * // => [['moe', 30, true], ['larry', 40, false]]\n   */function zip(array){var index=-1,length=array?max(pluck(arguments,'length')):0,result=Array(length);while(++index < length) {result[index] = pluck(arguments,index);}return result;} /*--------------------------------------------------------------------------*/ /**\n   * Creates a function that is restricted to executing `func` only after it is\n   * called `n` times. The `func` is executed with the `this` binding of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Number} n The number of times the function must be called before\n   * it is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var renderNotes = _.after(notes.length, render);\n   * _.forEach(notes, function(note) {\n   *   note.asyncSave({ 'success': renderNotes });\n   * });\n   * // `renderNotes` is run once, after all notes have saved\n   */function after(n,func){if(n < 1){return func();}return function(){if(--n < 1){return func.apply(this,arguments);}};} /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * passed to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */function bind(func,thisArg){ // use `Function#bind` if it exists and is fast\n// (in V8 `Function#bind` is slower except when partially applied)\nreturn isBindFast || nativeBind && arguments.length > 2?nativeBind.call.apply(nativeBind,arguments):createBound(func,thisArg,slice(arguments,2));} /**\n   * Binds methods on `object` to `object`, overwriting the existing method.\n   * Method names may be specified as individual arguments or as arrays of method\n   * names. If no method names are provided, all the function properties of `object`\n   * will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var view = {\n   *  'label': 'docs',\n   *  'onClick': function() { alert('clicked ' + this.label); }\n   * };\n   *\n   * _.bindAll(view);\n   * jQuery('#docs').on('click', view.onClick);\n   * // => alerts 'clicked docs', when the button is clicked\n   */function bindAll(object){var funcs=concat.apply(arrayRef,arguments),index=funcs.length > 1?0:(funcs = functions(object),-1),length=funcs.length;while(++index < length) {var key=funcs[index];object[key] = bind(object[key],object);}return object;} /**\n   * Creates a function that, when called, invokes the method at `object[key]`\n   * and prepends any additional `bindKey` arguments to those passed to the bound\n   * function. This method differs from `_.bind` by allowing bound functions to\n   * reference methods that will be redefined or don't yet exist.\n   * See http://michaux.ca/articles/lazy-function-definition-pattern.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object the method belongs to.\n   * @param {String} key The key of the method.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var object = {\n   *   'name': 'moe',\n   *   'greet': function(greeting) {\n   *     return greeting + ' ' + this.name;\n   *   }\n   * };\n   *\n   * var func = _.bindKey(object, 'greet', 'hi');\n   * func();\n   * // => 'hi moe'\n   *\n   * object.greet = function(greeting) {\n   *   return greeting + ', ' + this.name + '!';\n   * };\n   *\n   * func();\n   * // => 'hi, moe!'\n   */function bindKey(object,key){return createBound(object,key,slice(arguments,2));} /**\n   * Creates a function that is the composition of the passed functions,\n   * where each function consumes the return value of the function that follows.\n   * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} [func1, func2, ...] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var greet = function(name) { return 'hi ' + name; };\n   * var exclaim = function(statement) { return statement + '!'; };\n   * var welcome = _.compose(exclaim, greet);\n   * welcome('moe');\n   * // => 'hi moe!'\n   */function compose(){var funcs=arguments;return function(){var args=arguments,length=funcs.length;while(length--) {args = [funcs[length].apply(this,args)];}return args[0];};} /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n   * `true` for `immediate` to cause debounce to invoke `func` on the leading,\n   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to\n   * the debounced function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {Number} wait The number of milliseconds to delay.\n   * @param {Boolean} immediate A flag to indicate execution is on the leading\n   *  edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * var lazyLayout = _.debounce(calculateLayout, 300);\n   * jQuery(window).on('resize', lazyLayout);\n   */function debounce(func,wait,immediate){var args,result,thisArg,timeoutId;function delayed(){timeoutId = null;if(!immediate){result = func.apply(thisArg,args);}}return function(){var isImmediate=immediate && !timeoutId;args = arguments;thisArg = this;clearTimeout(timeoutId);timeoutId = setTimeout(delayed,wait);if(isImmediate){result = func.apply(thisArg,args);}return result;};} /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {Number} wait The number of milliseconds to delay execution.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */function delay(func,wait){var args=slice(arguments,2);return setTimeout(function(){func.apply(undefined,args);},wait);} /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * _.defer(function() { alert('deferred'); });\n   * // returns from the function before `alert` is called\n   */function defer(func){var args=slice(arguments,1);return setTimeout(function(){func.apply(undefined,args);},1);} // use `setImmediate` if it's available in Node.js\nif(isV8 && freeModule && typeof setImmediate == 'function'){defer = bind(setImmediate,window);} /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * passed, it will be used to determine the cache key for storing the result\n   * based on the arguments passed to the memoized function. By default, the first\n   * argument passed to the memoized function is used as the cache key. The `func`\n   * is executed with the `this` binding of the memoized function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   */function memoize(func,resolver){var cache={};return function(){var key=(resolver?resolver.apply(this,arguments):arguments[0]) + '';return hasOwnProperty.call(cache,key)?cache[key]:cache[key] = func.apply(this,arguments);};} /**\n   * Creates a function that is restricted to execute `func` once. Repeat calls to\n   * the function will return the value of the first call. The `func` is executed\n   * with the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` executes `createApplication` once\n   */function once(func){var ran,result;return function(){if(ran){return result;}ran = true;result = func.apply(this,arguments); // clear the `func` variable so the function may be garbage collected\nfunc = null;return result;};} /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those passed to the new function. This\n   * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ' ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi moe'\n   */function partial(func){return createBound(func,slice(arguments,1));} /**\n   * This method is similar to `_.partial`, except that `partial` arguments are\n   * appended to those passed to the new function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n   *\n   * var options = {\n   *   'variable': 'data',\n   *   'imports': { 'jq': $ }\n   * };\n   *\n   * defaultsDeep(options, _.templateSettings);\n   *\n   * options.variable\n   * // => 'data'\n   *\n   * options.imports\n   * // => { '_': _, 'jq': $ }\n   */function partialRight(func){return createBound(func,slice(arguments,1),null,indicatorObject);} /**\n   * Creates a function that, when executed, will only call the `func`\n   * function at most once per every `wait` milliseconds. If the throttled\n   * function is invoked more than once during the `wait` timeout, `func` will\n   * also be called on the trailing edge of the timeout. Subsequent calls to the\n   * throttled function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {Number} wait The number of milliseconds to throttle executions to.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   */function throttle(func,wait){var args,result,thisArg,timeoutId,lastCalled=0;function trailingCall(){lastCalled = new Date();timeoutId = null;result = func.apply(thisArg,args);}return function(){var now=new Date(),remaining=wait - (now - lastCalled);args = arguments;thisArg = this;if(remaining <= 0){clearTimeout(timeoutId);timeoutId = null;lastCalled = now;result = func.apply(thisArg,args);}else if(!timeoutId){timeoutId = setTimeout(trailingCall,remaining);}return result;};} /**\n   * Creates a function that passes `value` to the `wrapper` function as its\n   * first argument. Additional arguments passed to the function are appended\n   * to those passed to the `wrapper` function. The `wrapper` is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Mixed} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */function wrap(value,wrapper){return function(){var args=[value];push.apply(args,arguments);return wrapper.apply(this,args);};} /*--------------------------------------------------------------------------*/ /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to escape.\n   * @returns {String} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => 'Moe, Larry &amp; Curly'\n   */function escape(string){return string == null?'':(string + '').replace(reUnescapedHtml,escapeHtmlChar);} /**\n   * This function returns the first argument passed to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Mixed} value Any value.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */function identity(value){return value;} /**\n   * Adds functions properties of `object` to the `lodash` function and chainable\n   * wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('moe');\n   * // => 'Moe'\n   *\n   * _('moe').capitalize();\n   * // => 'Moe'\n   */function mixin(object){forEach(functions(object),function(methodName){var func=lodash[methodName] = object[methodName];lodash.prototype[methodName] = function(){var args=[this.__wrapped__];push.apply(args,arguments);return new lodash(func.apply(lodash,args));};});} /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */function noConflict(){window._ = oldDash;return this;} /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is passed, a number between `0` and the given number will be returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} [min=0] The minimum possible value.\n   * @param {Number} [max=1] The maximum possible value.\n   * @returns {Number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => a number between 0 and 5\n   *\n   * _.random(5);\n   * // => also a number between 0 and 5\n   */function random(min,max){if(min == null && max == null){max = 1;}min = +min || 0;if(max == null){max = min;min = 0;}return min + floor(nativeRandom() * ((+max || 0) - min + 1));} /**\n   * Resolves the value of `property` on `object`. If `property` is a function,\n   * it will be invoked and its result returned, else the property value is\n   * returned. If `object` is falsey, then `null` is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {String} property The property to get the value of.\n   * @returns {Mixed} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */function result(object,property){var value=object?object[property]:undefined;return isFunction(value)?object[property]():value;} /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build, `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`\n   * build and using precompiled templates, or loading Lo-Dash in a sandbox.\n   *\n   * For more information on precompiling templates see:\n   * http://lodash.com/#custom-builds\n   *\n   * For more information on Chrome extension sandboxes see:\n   * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} text The template text.\n   * @param {Obect} data The data object used to populate the text.\n   * @param {Object} options The options object.\n   *  escape - The \"escape\" delimiter regexp.\n   *  evaluate - The \"evaluate\" delimiter regexp.\n   *  interpolate - The \"interpolate\" delimiter regexp.\n   *  sourceURL - The sourceURL of the template's compiled source.\n   *  variable - The data object variable name.\n   *\n   * @returns {Function|String} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script&gt;</b>'\n   *\n   * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n   * _.template('hello ${ name }', { 'name': 'curly' });\n   * // => 'hello curly'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n   * // => 'hello stooge!'\n   *\n   * // using custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /{{([\\s\\S]+?)}}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */function template(text,data,options){ // based on John Resig's `tmpl` implementation\n// http://ejohn.org/blog/javascript-micro-templating/\n// and Laura Doktorova's doT.js\n// https://github.com/olado/doT\nvar settings=lodash.templateSettings;text || (text = ''); // avoid missing dependencies when `iteratorTemplate` is not defined\noptions = defaults({},options,settings);var imports=defaults({},options.imports,settings.imports),importsKeys=keys(imports),importsValues=values(imports);var isEvaluating,index=0,interpolate=options.interpolate || reNoMatch,source=\"__p += '\"; // compile regexp to match each delimiter\nvar reDelimiters=RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate?reEsTemplate:reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$','g');text.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue || (interpolateValue = esTemplateValue); // escape characters that cannot be included in string literals\nsource += text.slice(index,offset).replace(reUnescapedString,escapeStringChar); // replace delimiters with snippets\nif(escapeValue){source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";}if(evaluateValue){isEvaluating = true;source += \"';\\n\" + evaluateValue + \";\\n__p += '\";}if(interpolateValue){source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";}index = offset + match.length; // the JS engine embedded in Adobe products requires returning the `match`\n// string in order to produce the correct `offset` value\nreturn match;});source += \"';\\n\"; // if `variable` is not specified and the template contains \"evaluate\"\n// delimiters, wrap a with-statement around the generated code to add the\n// data object to the top of the scope chain\nvar variable=options.variable,hasVariable=variable;if(!hasVariable){variable = 'obj';source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';} // cleanup code by stripping empty strings\nsource = (isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;'); // frame code as the function body\nsource = 'function(' + variable + ') {\\n' + (hasVariable?'':variable + ' || (' + variable + ' = {});\\n') + \"var __t, __p = '', __e = _.escape\" + (isEvaluating?', __j = Array.prototype.join;\\n' + \"function print() { __p += __j.call(arguments, '') }\\n\":';\\n') + source + 'return __p\\n}'; // Use a sourceURL for easier debugging and wrap in a multi-line comment to\n// avoid issues with Narwhal, IE conditional compilation, and the JS engine\n// embedded in Adobe products.\n// http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\nvar sourceURL='\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + templateCounter++ + ']') + '\\n*/';try{var result=Function(importsKeys,'return ' + source + sourceURL).apply(undefined,importsValues);}catch(e) {e.source = source;throw e;}if(data){return result(data);} // provide the compiled function's source via its `toString` method, in\n// supported environments, or the `source` property as a convenience for\n// inlining compiled templates during the build process\nresult.source = source;return result;} /**\n   * Executes the `callback` function `n` times, returning an array of the results\n   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */function times(n,callback,thisArg){n = +n || 0;var index=-1,result=Array(n);while(++index < n) {result[index] = callback.call(thisArg,index);}return result;} /**\n   * The opposite of `_.escape`, this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to unescape.\n   * @returns {String} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => 'Moe, Larry & Curly'\n   */function unescape(string){return string == null?'':(string + '').replace(reEscapedHtml,unescapeHtmlChar);} /**\n   * Generates a unique ID. If `prefix` is passed, the ID will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} [prefix] The value to prefix the ID with.\n   * @returns {String} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */function uniqueId(prefix){var id=++idCounter;return (prefix == null?'':prefix + '') + id;} /*--------------------------------------------------------------------------*/ /**\n   * Invokes `interceptor` with the `value` as the first argument, and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n   * in order to perform operations on intermediate results within the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to pass to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3, 4])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(alert)\n   *  .map(function(num) { return num * num; })\n   *  .value();\n   * // => // [2, 4] (alerted)\n   * // => [4, 16]\n   */function tap(value,interceptor){interceptor(value);return value;} /**\n   * Produces the `toString` result of the wrapped value.\n   *\n   * @name toString\n   * @memberOf _\n   * @category Chaining\n   * @returns {String} Returns the string result.\n   * @example\n   *\n   * _([1, 2, 3]).toString();\n   * // => '1,2,3'\n   */function wrapperToString(){return this.__wrapped__ + '';} /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */function wrapperValueOf(){return this.__wrapped__;} /*--------------------------------------------------------------------------*/ // add functions that return wrapped values when chaining\nlodash.after = after;lodash.assign = assign;lodash.at = at;lodash.bind = bind;lodash.bindAll = bindAll;lodash.bindKey = bindKey;lodash.compact = compact;lodash.compose = compose;lodash.countBy = countBy;lodash.debounce = debounce;lodash.defaults = defaults;lodash.defer = defer;lodash.delay = delay;lodash.difference = difference;lodash.filter = filter;lodash.flatten = flatten;lodash.forEach = forEach;lodash.forIn = forIn;lodash.forOwn = forOwn;lodash.functions = functions;lodash.groupBy = groupBy;lodash.initial = initial;lodash.intersection = intersection;lodash.invert = invert;lodash.invoke = invoke;lodash.keys = keys;lodash.map = map;lodash.max = max;lodash.memoize = memoize;lodash.merge = merge;lodash.min = min;lodash.object = object;lodash.omit = omit;lodash.once = once;lodash.pairs = pairs;lodash.partial = partial;lodash.partialRight = partialRight;lodash.pick = pick;lodash.pluck = pluck;lodash.range = range;lodash.reject = reject;lodash.rest = rest;lodash.shuffle = shuffle;lodash.sortBy = sortBy;lodash.tap = tap;lodash.throttle = throttle;lodash.times = times;lodash.toArray = toArray;lodash.union = union;lodash.uniq = uniq;lodash.values = values;lodash.where = where;lodash.without = without;lodash.wrap = wrap;lodash.zip = zip; // add aliases\nlodash.collect = map;lodash.drop = rest;lodash.each = forEach;lodash.extend = assign;lodash.methods = functions;lodash.select = filter;lodash.tail = rest;lodash.unique = uniq; // add functions to `lodash.prototype`\nmixin(lodash); /*--------------------------------------------------------------------------*/ // add functions that return unwrapped values when chaining\nlodash.clone = clone;lodash.cloneDeep = cloneDeep;lodash.contains = contains;lodash.escape = escape;lodash.every = every;lodash.find = find;lodash.has = has;lodash.identity = identity;lodash.indexOf = indexOf;lodash.isArguments = isArguments;lodash.isArray = isArray;lodash.isBoolean = isBoolean;lodash.isDate = isDate;lodash.isElement = isElement;lodash.isEmpty = isEmpty;lodash.isEqual = isEqual;lodash.isFinite = isFinite;lodash.isFunction = isFunction;lodash.isNaN = isNaN;lodash.isNull = isNull;lodash.isNumber = isNumber;lodash.isObject = isObject;lodash.isPlainObject = isPlainObject;lodash.isRegExp = isRegExp;lodash.isString = isString;lodash.isUndefined = isUndefined;lodash.lastIndexOf = lastIndexOf;lodash.mixin = mixin;lodash.noConflict = noConflict;lodash.random = random;lodash.reduce = reduce;lodash.reduceRight = reduceRight;lodash.result = result;lodash.size = size;lodash.some = some;lodash.sortedIndex = sortedIndex;lodash.template = template;lodash.unescape = unescape;lodash.uniqueId = uniqueId; // add aliases\nlodash.all = every;lodash.any = some;lodash.detect = find;lodash.foldl = reduce;lodash.foldr = reduceRight;lodash.include = contains;lodash.inject = reduce;forOwn(lodash,function(func,methodName){if(!lodash.prototype[methodName]){lodash.prototype[methodName] = function(){var args=[this.__wrapped__];push.apply(args,arguments);return func.apply(lodash,args);};}}); /*--------------------------------------------------------------------------*/ // add functions capable of returning wrapped and unwrapped values when chaining\nlodash.first = first;lodash.last = last; // add aliases\nlodash.take = first;lodash.head = first;forOwn(lodash,function(func,methodName){if(!lodash.prototype[methodName]){lodash.prototype[methodName] = function(callback,thisArg){var result=func(this.__wrapped__,callback,thisArg);return callback == null || thisArg && typeof callback != 'function'?result:new lodash(result);};}}); /*--------------------------------------------------------------------------*/ /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type String\n   */lodash.VERSION = '1.0.2'; // add \"Chaining\" functions to the wrapper\nlodash.prototype.toString = wrapperToString;lodash.prototype.value = wrapperValueOf;lodash.prototype.valueOf = wrapperValueOf; // add `Array` functions that return unwrapped values\neach(['join','pop','shift'],function(methodName){var func=arrayRef[methodName];lodash.prototype[methodName] = function(){return func.apply(this.__wrapped__,arguments);};}); // add `Array` functions that return the wrapped value\neach(['push','reverse','sort','unshift'],function(methodName){var func=arrayRef[methodName];lodash.prototype[methodName] = function(){func.apply(this.__wrapped__,arguments);return this;};}); // add `Array` functions that return new wrapped values\neach(['concat','slice','splice'],function(methodName){var func=arrayRef[methodName];lodash.prototype[methodName] = function(){return new lodash(func.apply(this.__wrapped__,arguments));};}); // avoid array-like object bugs with `Array#shift` and `Array#splice`\n// in Firefox < 10 and IE < 9\nif(hasObjectSpliceBug){each(['pop','shift','splice'],function(methodName){var func=arrayRef[methodName],isSplice=methodName == 'splice';lodash.prototype[methodName] = function(){var value=this.__wrapped__,result=func.apply(value,arguments);if(value.length === 0){delete value[0];}return isSplice?new lodash(result):result;};});} /*--------------------------------------------------------------------------*/ // expose Lo-Dash\n// some AMD build optimizers, like r.js, check for specific condition patterns like the following:\nif(true){ // Expose Lo-Dash to the global object even when an AMD loader is present in\n// case Lo-Dash was injected by a third-party script and not intended to be\n// loaded as a module. The global assignment can be reverted in the Lo-Dash\n// module via its `noConflict()` method.\nwindow._ = lodash; // define as an anonymous module so, through path mapping, it can be\n// referenced as the \"underscore\" module\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return lodash;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));} // check for `exports` after `define` in case a build optimizer adds an `exports` object\nelse if(freeExports){ // in Node.js or RingoJS v0.8.0+\nif(freeModule){(freeModule.exports = lodash)._ = lodash;} // in Narwhal or RingoJS v0.7.0-\nelse {freeExports._ = lodash;}}else { // in a browser or Rhino\nwindow._ = lodash;}})(undefined);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)(module), (function() { return this; }()), __webpack_require__(1).setImmediate))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/dist/lodash.compat.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/lodash/dist/lodash.compat.js?");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("// shim for using process in browser\n\n'use strict';\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/process/browser.js?");

/***/ },
/* 4 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! LineUpJS - v0.1.0 - 2015-07-08\n* https://github.com/Caleydo/lineup.js\n* Copyright (c) 2015 ; Licensed BSD */'use strict';(function(){function LineUpLoader(jQuery,d3,_){ /**\n * Constructor to Create a LineUp Visualization\n * @param spec - the specifications object\n * @param spec.storage - a LineUp Storage, see {@link LineUpLocalStorage}\n * @constructor\n */var LineUp;(function(LineUp,d3,$,undefined){function LineUpClass(spec,$container,config){var $defs,scroller;this.storage = spec.storage;this.spec = spec; //    this.sortedColumn = [];\nthis.$container = $container;this.tooltip = LineUp.createTooltip($container.node()); //trigger hover event\nthis.listeners = d3.dispatch('hover','change-sortcriteria','change-filter','selected','multiselected');this.config = $.extend(true,{},LineUp.defaultConfig,config,{ //TODO internal stuff, should to be extracted\ncolumnBundles:{primary:{sortedColumn:null,sortingOrderAsc:true,prevRowScale:null}}});this.storage.config = this.config;if(!this.config.svgLayout.addPlusSigns){this.config.svgLayout.plusSigns = {}; // empty plusSign if no plus signs needed\n} //create basic structure\nif(this.config.svgLayout.mode === 'combined'){ //within a single svg with 'fixed' header\n$container.classed('lu-mode-combined',true);this.$table = $container.append('svg').attr('class','lu');$defs = this.$table.append('defs');$defs.append('defs').attr('class','columnheader');$defs.append('defs').attr('class','column');$defs.append('defs').attr('class','overlay');this.$body = this.$table.append('g').attr('class','body').attr('transform','translate(0,' + this.config.htmlLayout.headerHeight + ')');this.$header = this.$table.append('g').attr('class','header');this.$bodySVG = this.$headerSVG = this.$table;scroller = this.initScrolling($($container.node()),this.config.htmlLayout.headerHeight);}else { //within two svgs with a dedicated header\n$container.classed('lu-mode-separate',true);this.$table = $container;this.$headerSVG = this.$table.append('svg').attr('class','lu lu-header');this.$headerSVG.attr('height',this.config.htmlLayout.headerHeight);this.$headerSVG.append('defs').attr('class','columnheader');this.$header = this.$headerSVG.append('g');this.$bodySVG = this.$table.append('div').attr('class','lu-wrapper').append('svg').attr('class','lu lu-body');$defs = this.$bodySVG.append('defs');$defs.append('defs').attr('class','column');$defs.append('defs').attr('class','overlay');this.$body = this.$bodySVG;scroller = this.initScrolling($($container.node()).find('div.lu-wrapper'),0);}this.selectVisible = scroller.selectVisible;this.onScroll = scroller.onScroll;this.$header.append('rect').attr({width:'100%',height:this.config.htmlLayout.headerHeight,fill:'lightgray'});this.$header.append('g').attr('class','main');this.$header.append('g').attr('class','overlay');this.headerUpdateRequired = true;this.stackedColumnModified = null;this.dragWeight = this.initDragging();return this;}LineUp.prototype = LineUpClass.prototype = $.extend(LineUpClass.prototype,LineUp.prototype);LineUp.create = function(storage,$container,options){if(!('storage' in storage)){ // TODO: was '!$.isPlainObject(storage)'\nstorage = {storage:storage};}var r=new LineUpClass(storage,$container,options);r.startVis();return r;};LineUp.prototype.scrolled = function(top,left){if(this.config.svgLayout.mode === 'combined'){ //in single svg mode propagate vertical shift\nthis.$header.attr('transform','translate(0,' + top + ')');}else { //in two svg mode propagate horizontal shift\nthis.$header.attr('transform','translate(' + -left + ',0)');}}; /**\n   * default config of LineUp with all available options\n   *\n   */LineUp.defaultConfig = {colorMapping:d3.map(),columnColors:d3.scale.category20(),grayColor:'#999999',numberformat:d3.format('.3n'),htmlLayout:{headerHeight:50,headerOffset:2,buttonTopPadding:10,labelLeftPadding:12,buttonRightPadding:15,buttonWidth:13},renderingOptions:{stacked:false,values:false,animation:true,histograms:false},svgLayout:{ /**\n       * mode of this lineup instance, either combined = a single svg with header and body combined or separate ... separate header and body\n       */mode:'combined', //modes: combined vs separate\nrowHeight:20,rowPadding:0.2, //padding for scale.rangeBands\nrowBarPadding:2, /**\n       * number of backup rows to keep to avoid updating on every small scroll thing\n       */backupScrollRows:4,animationDuration:1000,addPlusSigns:false,plusSigns:{addStackedColumn:{title:'add stacked column',action:'addNewEmptyStackedColumn',x:0,y:2,w:21,h:21 // LineUpGlobal.htmlLayout.headerHeight/2-4\n}},rowActions:[ /*{\n         name: 'explore',\n         icon: '\\uf067',\n         action: function(row) {\n         console.log(row);\n         }\n         }*/]}, /* enables manipulation features, remove column, reorder,... */manipulative:true,interaction:{ //enable the table tooltips\ntooltips:true,multiselect:function multiselect(){return false;},rangeselect:function rangeselect(){return false;}},filter:{skip:0,limit:Number.POSITIVE_INFINITY,filter:undefined}};LineUp.prototype.on = function(type,listener){if(arguments.length < 2){return this.listeners.on(type);}this.listeners.on(type,listener);return this;};LineUp.prototype.changeDataStorage = function(spec){ //    d3.select('#lugui-table-header-svg').selectAll().remove();\nthis.storage = spec.storage;this.storage.config = this.config;this.spec = spec;this.config.columnBundles.primary.sortedColumn = null;this.headerUpdateRequired = true;delete this.prevRowScale;this.startVis();}; /**\n   * change a rendering option\n   * @param option\n   * @param value\n   */LineUp.prototype.changeRenderingOption = function(option,value){var v=this.config.renderingOptions[option];if(v === value){return;}this.config.renderingOptions[option] = value;if(option === 'histograms'){if(value){this.storage.resortData({filteredChanged:true});}}this.updateAll(true);}; /**\n   * the function to start the LineUp visualization\n   */LineUp.prototype.startVis = function(){this.assignColors(this.storage.getRawColumns());this.headerUpdateRequired = true; //initial sort\nthis.storage.resortData({});this.updateAll();};LineUp.prototype.assignColors = function(columns){ //Color schemes are in config (.columnColors / .grayColor)\n// clear map\nvar config=this.config;config.colorMapping = d3.map();var colCounter=0;columns.forEach(function(d){if(d.color){config.colorMapping.set(d.id,d.color);}else if(d instanceof LineUp.LineUpStringColumn || d.id === 'rank'){ // gray columns are:\nconfig.colorMapping.set(d.id,config.grayColor);}else {config.colorMapping.set(d.id,config.columnColors(colCounter));colCounter++;}}); //console.log(config.colorMapping);\n};LineUp.prototype.updateAll = function(stackTransition,bundle){var that=this;function updateBundle(b){var cols=that.storage.getColumnLayout(b);that.updateHeader(cols);that.updateBody(cols,that.storage.getData(b),stackTransition || false);}if(bundle){updateBundle(bundle);}else {Object.keys(this.storage.bundles).forEach(updateBundle);}}; /**\n   * sort by a column given by name\n   * @param column\n   * @param asc\n   * @returns {boolean}\n   */LineUp.prototype.sortBy = function(column,asc){column = column || this.storage.primaryKey;asc = asc || false;var d=this.storage.getColumnByName(column);if(!d){return false;}var bundle=this.config.columnBundles[d.columnBundle];bundle.sortingOrderAsc = asc;bundle.sortedColumn = d;this.listeners['change-sortcriteria'](this,d,bundle.sortingOrderAsc); // ATS: Updates for external\nif(!this.config.sorting || !this.config.sorting.external){this.storage.resortData({column:d,asc:bundle.sortingOrderAsc});}this.updateAll(false,d.columnBundle);}; /**\n   * toggles the stacked rendering of this table\n   */LineUp.prototype.toggleStackedRendering = function(){this.config.renderingOptions.stacked = !this.config.renderingOptions.stacked;this.updateAll(true);}; /**\n   * toggles whether values are rendered all the time\n   */LineUp.prototype.toggleValueRendering = function(){this.config.renderingOptions.values = !this.config.renderingOptions.values;this.updateAll(true);}; /**\n   * set the limits to simulate pagination, similar to SQL skip and limit\n   * @param skip start number\n   * @param limit number or rows\n   */LineUp.prototype.setLimits = function(skip,limit){this.config.filter.skip = skip;this.config.filter.limit = limit; //trigger resort to apply skip\nthis.storage.resortData({});this.updateAll();}; /**\n   * change the weights of the selected column\n   * @param column\n   * @param weights\n   * @returns {boolean}\n   */LineUp.prototype.changeWeights = function(column,weights){if(typeof column === 'string'){column = this.storage.getColumnByName(column);}column = column || this.config.columnBundles.primary.sortedColumn;var bundle=column.columnBundle;if(!(column instanceof LineUp.LayoutStackedColumn)){return false;}column.updateWeights(weights); //trigger resort\nif(column === this.config.columnBundles[bundle].sortedColumn){this.listeners['change-sortcriteria'](this,column,this.config.columnBundles[bundle]); // ATS: Updates for external\nif(!this.config.sorting || !this.config.sorting.external){this.storage.resortData({key:bundle});}}this.updateAll(false,bundle);return true;}; /**\n     * manually change/set the filter of a column\n     * @param column\n     * @param filter\n     */LineUp.prototype.changeFilter = function(column,filter){if(typeof column === 'string'){column = this.storage.getColumnByName(column);}column.filter = filter;this.listeners['change-filter'](this,column);this.storage.resortData({filteredChanged:true});this.updateBody();}; /**\n   * destroys the DOM elements created by this lineup instance, this should be the last call to this lineup instance\n   */LineUp.prototype.destroy = function(){ //remove tooltip\nthis.tooltip.destroy();this.$container.selectAll('*').remove();if(this.config.svgLayout.mode === 'combined'){this.$container.off('scroll',this.onScroll);}};})(LineUp || (LineUp = {}),d3,jQuery); /*global d3, jQuery, _ */var LineUp;(function(LineUp,d3,$,_,undefined){function fixCSS(id){return id.replace(/[\\s!\\'#$%&'\\(\\)\\*\\+,\\.\\/:;<=>\\?\\@\\[\\\\\\]\\^`\\{\\|\\}~]/g,'_'); //replace non css stuff to _\n} /**\n   * The mother of all Columns\n   * @param desc The descriptor object\n   * @class\n   */function LineUpColumn(desc){this.column = desc.column;this.label = desc.label || desc.column;this.color = desc.color;this.id = fixCSS(desc.id || this.column);this.missingValue = desc.missingValue;this.layout = {};}LineUp.LineUpColumn = LineUpColumn;LineUpColumn.prototype = $.extend({},{},{getValue:function getValue(row){var r=row[this.column];if(typeof r === \"undefined\"){return this.missingValue;}return r;},getRawValue:function getRawValue(row){var r=this.getValue(row);if(typeof r === 'undefined'){return '';}return r;}});function isWildCard(v){return typeof v !== 'number' || isNaN(v);} /**\n   * A {@link LineUpColumn} implementation for Numbers\n   * @param desc The descriptor object\n   * @constructor\n   * @extends LineUpColumn\n   */function LineUpNumberColumn(desc,_,data){LineUpColumn.call(this,desc);this.domain = desc.domain || [NaN,NaN];this.range = desc.range || [0,1];if(typeof this.missingValue === \"undefined\"){this.missingValue = NaN;} //infer the min max\nvar that=this;if(isWildCard(this.domain[0]) || isWildCard(this.domain[1])){var minmax=d3.extent(data,function(row){return that.getValue(row);});if(isWildCard(this.domain[0])){this.domain[0] = minmax[0];}if(isWildCard(this.domain[1])){this.domain[1] = minmax[1];}}}LineUp.LineUpNumberColumn = LineUpNumberColumn;LineUpNumberColumn.prototype = $.extend({},LineUpColumn.prototype,{getValue:function getValue(row){var r=LineUpColumn.prototype.getValue.call(this,row);if(r === null || typeof r === 'undefined' || r === '' || r.toString().trim().length === 0){r = this.missingValue;}return +r;},getRawValue:function getRawValue(row){var r=LineUpColumn.prototype.getValue.call(this,row);if(isNaN(r)){return '';}return r;}}); /**\n   *A {@link LineUpColumn} implementation for Strings\n   * @param desc The description object\n   * @constructor\n   * @extends LineUpColumn\n   */function LineUpStringColumn(desc){LineUpColumn.call(this,desc);}LineUp.LineUpStringColumn = LineUpStringColumn;LineUpStringColumn.prototype = $.extend({},LineUpColumn.prototype,{}); /**\n   *A {@link LineUpColumn} implementation for Strings\n   * @param desc The description object\n   * @constructor\n   * @extends LineUpColumn\n   */function LineUpCategoricalColumn(desc,_,data){LineUpColumn.call(this,desc);this.categories = [];this.categoryColors = d3.scale.category10().range();var that=this;if(desc.categories){desc.categories.forEach(function(cat,i){if(typeof cat === 'string'){that.categories.push(cat);}else {that.categories.push(cat.name);that.categoryColors[i] = cat.color;}});}if(this.categories.length === 0){this.categories = d3.set(data.map(function(row){return that.getValue(row);})).values();this.categories.sort();}}LineUp.LineUpCategoricalColumn = LineUpCategoricalColumn;LineUpCategoricalColumn.prototype = $.extend({},LineUpColumn.prototype,{}); /**\n   *  --- FROM HERE ON ONLY Layout Columns ---\n   */function LayoutColumn(desc){var that=this;this.columnWidth = desc.width || 100;this.id = _.uniqueId(\"Column_\");this.filter = desc.filter;this.parent = desc.parent || null; // or null\nthis.columnBundle = \"primary\"; //define it here to have a dedicated this pointer\nthis.sortBy = function(a,b){a = that.getValue(a);b = that.getValue(b);return that.safeSortBy(a,b);};}LineUp.LayoutColumn = LayoutColumn;LayoutColumn.prototype = $.extend({},{},{setColumnWidth:function setColumnWidth(newWidth,ignoreParent){this.columnWidth = newWidth;if(!ignoreParent && this.parent){this.parent.updateWidthFromChild({id:this.id,newWidth:newWidth});}},getColumnWidth:function getColumnWidth(){return this.columnWidth;},prepare:function prepare() /*data*/{},safeSortBy:function safeSortBy(a,b){var an=typeof a === 'number' && isNaN(a);var bn=typeof b === 'number' && isNaN(b);if(an && bn){return 0;}if(an){return 1;}if(bn){return -1;}return d3.descending(a,b);},flattenMe:function flattenMe(array){array.push(this);},description:function description(){var res={};res.width = this.columnWidth;res.filter = this.filter;return res;},makeCopy:function makeCopy(){return new LayoutColumn(this.description());},isFiltered:function isFiltered(){return typeof this.filter !== 'undefined';},filterBy:function filterBy() /*row*/{return true;}});function LayoutSingleColumn(desc,rawColumns){LayoutColumn.call(this,desc);this.columnLink = desc.column;this.column = rawColumns.get(desc.column);this.id = fixCSS(_.uniqueId(this.columnLink + \"_\"));}LineUp.LayoutSingleColumn = LayoutSingleColumn;LayoutSingleColumn.prototype = $.extend({},LayoutColumn.prototype,{getValue:function getValue(row,mode){if(mode === 'raw'){return this.column.getRawValue(row);}return this.column.getValue(row);},getLabel:function getLabel(){return this.column.label;},getDataID:function getDataID(){return this.column.id;},description:function description(){var res=LayoutColumn.prototype.description.call(this);res.column = this.columnLink;return res;},makeCopy:function makeCopy(){var description=this.description();var lookup=d3.map();lookup.set(this.columnLink,this.column);var res=new LayoutSingleColumn(description,lookup);return res;}});function LayoutNumberColumn(desc,rawColumns){LayoutSingleColumn.call(this,desc,rawColumns); //from normalized value to width value\nthis.value2pixel = d3.scale.linear().domain([0,1]).range([0,this.columnWidth]);var d=desc.domain || this.column.domain;if(isWildCard(d[0])){d[0] = this.column.domain[0];}if(isWildCard(d[1])){d[1] = this.column.domain[1];}this.scale = d3.scale.linear().clamp(true).domain(d).range(desc.range || this.column.range);this.histgenerator = d3.layout.histogram();var that=this;this.histgenerator.range(this.scale.range());this.histgenerator.value(function(row){return that.getValue(row);});this.hist = [];}LineUp.LayoutNumberColumn = LayoutNumberColumn;LayoutNumberColumn.prototype = $.extend({},LayoutSingleColumn.prototype,{mapping:function mapping(newscale){if(arguments.length < 1){return this.scale;}this.scale = newscale.clamp(true);this.histgenerator.range(newscale.range());},originalMapping:function originalMapping(){return d3.scale.linear().clamp(true).domain(this.column.domain).range(this.column.range);},prepare:function prepare(data,showHistograms){if(!showHistograms){this.hist = [];return;} //remove all the direct values to save space\nthis.hist = this.histgenerator(data).map(function(bin){return {x:bin.x,dx:bin.dx,y:bin.y};});var max=d3.max(this.hist,function(d){return d.y;});this.hist.forEach(function(d){if(max > 0){d.y /= max;}});},binOf:function binOf(row){var v=this.getValue(row),i;for(i = this.hist.length - 1;i >= 0;--i) {var bin=this.hist[i];if(bin.x <= v && v <= bin.x + bin.dx){return i;}}return -1;},setColumnWidth:function setColumnWidth(newWidth,ignoreParent){this.value2pixel.range([0,newWidth]);LayoutSingleColumn.prototype.setColumnWidth.call(this,newWidth,ignoreParent);},getValue:function getValue(row,mode){if(mode === 'raw'){return this.column.getRawValue(row);}return this.scale(this.column.getValue(row));},getWidth:function getWidth(row){var r=this.getValue(row);if(isNaN(r) || typeof r === 'undefined'){return 0;}return this.value2pixel(r);},filterBy:function filterBy(row){var filter=this.filter;if(typeof filter === 'undefined' || !this.column){return true;}var r=this.getValue(row,'raw');if(typeof filter === 'number' && isNaN(filter)){return !isNaN(r);}else if(typeof filter === 'number'){return r >= filter;}else if(Array.isArray(filter)){return filter[0] <= r && r <= filter[1];}return true;},description:function description(){var res=LayoutColumn.prototype.description.call(this);res.column = this.columnLink;res.type = 'number';var a=this.scale.domain();var b=this.column.domain;if(a[0] !== b[0] || a[1] !== b[1]){res.domain = a;}a = this.scale.range();b = this.column.range;if(a[0] !== b[0] || a[1] !== b[1]){res.range = a;}return res;},makeCopy:function makeCopy(){var lookup=d3.map();lookup.set(this.columnLink,this.column);var res=new LayoutNumberColumn(this.description(),lookup);return res;}});function LayoutStringColumn(desc,rawColumns){LayoutSingleColumn.call(this,desc,rawColumns);}LineUp.LayoutStringColumn = LayoutStringColumn;LayoutStringColumn.prototype = $.extend({},LayoutSingleColumn.prototype,{filterBy:function filterBy(row){var filter=this.filter;if(typeof filter === 'undefined' || !this.column){return true;}var r=this.getValue(row);if(typeof r === 'boolean'){return r && r.trim().length > 0;}else if(typeof filter === 'string' && filter.length > 0){return r && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;}else if(filter instanceof RegExp){return r && r.match(filter);}return true;},makeCopy:function makeCopy(){var lookup=d3.map();lookup.set(this.columnLink,this.column);var res=new LayoutStringColumn(this.description(),lookup);return res;}});function LayoutCategoricalColumn(desc,rawColumns){LayoutSingleColumn.call(this,desc,rawColumns);}LineUp.LayoutCategoricalColumn = LayoutCategoricalColumn;LayoutCategoricalColumn.prototype = $.extend({},LayoutSingleColumn.prototype,{filterBy:function filterBy(row){var filter=this.filter;if(typeof filter === 'undefined' || !this.column){return true;}var r=this.getValue(row);if(Array.isArray(filter) && filter.length > 0){return filter.indexOf(r) >= 0;}else if(typeof filter === 'string' && filter.length > 0){return r && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;}else if(filter instanceof RegExp){return r && r.match(filter);}return true;},makeCopy:function makeCopy(){var lookup=d3.map();lookup.set(this.columnLink,this.column);var res=new LayoutCategoricalColumn(this.description(),lookup);return res;}});function LayoutCategoricalColorColumn(desc,rawColumns){LayoutSingleColumn.call(this,desc,rawColumns);}LineUp.LayoutCategoricalColorColumn = LayoutCategoricalColorColumn;LayoutCategoricalColorColumn.prototype = $.extend({},LayoutSingleColumn.prototype,{getColor:function getColor(row){var cat=this.getValue(row,'raw');if(cat === null || cat === ''){return null;}var index=this.column.categories.indexOf(cat);if(index < 0){return null;}return this.column.categoryColors[index];},filterBy:function filterBy(row){return LayoutCategoricalColumn.prototype.filterBy.call(this,row);},makeCopy:function makeCopy(){var lookup=d3.map();lookup.set(this.columnLink,this.column);var res=new LayoutCategoricalColorColumn(this.description(),lookup);return res;}});function LayoutRankColumn(desc,_dummy,_dummy2,storage){LayoutColumn.call(this,desc?desc:{},[]);this.columnWidth = desc?desc.width || 50:50;this.id = fixCSS(_.uniqueId('rank_')); //maps keys to ranks\nthis.values = d3.map();this.storage = storage;}LineUp.LayoutRankColumn = LayoutRankColumn;LayoutRankColumn.prototype = $.extend({},LayoutColumn.prototype,{setValue:function setValue(row,d){this.values.set(row[this.storage.primaryKey],d);},getValue:function getValue(row){return this.values.get(row[this.storage.primaryKey]);},filter:function filter(row){var r=this.getValue(row);if(typeof r === 'undefined'){return true;}else if(typeof this.filter === 'number'){return r >= this.filter;}else if(Array.isArray(this.filter)){return this.filter[0] <= r && r <= this.filter[1];}return true;},getLabel:function getLabel(){return 'Rank';},getDataID:function getDataID(){return this.id;},description:function description(){var res=LayoutColumn.prototype.description.call(this);res.type = 'rank';return res;},makeCopy:function makeCopy(){var description=this.description();var res=new LayoutRankColumn(description,null,null,this.column.storage);return res;}}); // TODO: maybe remove??\nfunction LayoutCompositeColumn(desc,rawColumns){LayoutColumn.call(this,desc,rawColumns);this.childrenLinks = desc.children || [];this.label = desc.label || this.id;}LineUp.LayoutCompositeColumn = LayoutCompositeColumn;LayoutCompositeColumn.prototype = $.extend({},LayoutColumn.prototype,{getDataID:function getDataID(){return this.id;},getLabel:function getLabel(){return this.label;}});function LayoutStackedColumn(desc,rawColumns,toLayoutColumn){LayoutCompositeColumn.call(this,desc,rawColumns);this.childrenWeights = [];this.childrenWidths = [];this.toLayoutColumn = toLayoutColumn;this.children = [];this.emptyColumns = [];this.scale = d3.scale.linear().domain([0,1]).range([0,this.columnWidth]);this.init(desc);var that=this;this.sortBy = function(a,b){var aAll=0;var bAll=0;that.children.forEach(function(d){aAll += d.getWidth(a);bAll += d.getWidth(b);});return that.safeSortBy(aAll,bAll);};}LineUp.LayoutStackedColumn = LayoutStackedColumn;LayoutStackedColumn.prototype = $.extend({},LayoutCompositeColumn.prototype,{getValue:function getValue(row){ // TODO: a caching strategy might work here\nvar that=this;var all=0;this.children.forEach(function(d,i){var r=d.getValue(row);if(isNaN(r) || typeof r === 'undefined'){r = 0;}all += r * that.childrenWeights[i];});return all;},init:function init(desc){var that=this;if(this.childrenLinks.length < 1){this.emptyColumns.push(new LayoutEmptyColumn({parent:that}));}else { // check if weights or width are given\nif(this.childrenLinks[0].hasOwnProperty(\"weight\")){this.childrenWeights = this.childrenLinks.map(function(d){return +(d.weight || 1);});this.scale.domain([0,d3.sum(this.childrenWeights)]);if(desc.hasOwnProperty('width')){ // if the stacked column has a width -- normalize to width\nthis.childrenWidths = this.childrenWeights.map(function(d){return that.scale(d);});}else { // if width was artificial set, approximate a total width of x*100\nthis.columnWidth = this.children.length * 100;this.scale.range([0,that.columnWidth]);}}else { // accumulate weights and map 100px to  weight 1.0\nthis.childrenWidths = this.childrenLinks.map(function(d){return +(d.width || 100);});this.childrenWeights = this.childrenWidths.map(function(d){return d / 100.0;});this.columnWidth = d3.sum(this.childrenWidths);this.scale.domain([0,d3.sum(this.childrenWeights)]).range([0,this.columnWidth]);}this.children = this.childrenLinks.map(function(d,i){d.width = that.childrenWidths[i];d.parent = that;return that.toLayoutColumn(d);});}},flattenMe:function flattenMe(array,spec){var addEmptyColumns=false;if(spec){addEmptyColumns = spec.addEmptyColumns || false;}array.push(this);this.children.forEach(function(d){d.flattenMe(array);});if(addEmptyColumns){this.emptyColumns.forEach(function(d){return d.flattenMe(array);});}},filterBy:function filterBy(row){if(typeof this.filter === 'undefined'){return true;}var val=this.getValue(row);if(typeof this.filter === 'number'){return val <= this.filter;}else if(Array.isArray(this.filter)){return this.filter[0] <= val && val <= this.filter[1];}return true;},updateWidthFromChild:function updateWidthFromChild(){var that=this; // adopt weight and global size\nthis.childrenWidths = this.children.map(function(d){return d.getColumnWidth();});this.childrenWeights = this.childrenWidths.map(function(d){return that.scale.invert(d);});this.columnWidth = d3.sum(this.childrenWidths);this.scale.range([0,this.columnWidth]);this.scale.domain([0,d3.sum(this.childrenWeights)]);},setColumnWidth:function setColumnWidth(newWidth){var that=this;this.columnWidth = newWidth;that.scale.range([0,this.columnWidth]);this.childrenWidths = this.childrenWeights.map(function(d){return that.scale(d);}); //        console.log(this.childrenWidths, this.childrenWeights);\nthis.children.forEach(function(d,i){return d.setColumnWidth(that.childrenWidths[i],true);});},updateWeights:function updateWeights(weights){this.childrenWeights = weights;this.scale.domain([0,d3.sum(this.childrenWeights)]);var that=this;this.childrenWidths = this.childrenWeights.map(function(d){return that.scale(d);});this.columnWidth = d3.sum(this.childrenWidths);this.children.forEach(function(d,i){return d.setColumnWidth(that.childrenWidths[i],true);}); //console.log(this.childrenWeights);\n//console.log(this.childrenWidths);\n},removeChild:function removeChild(child){var indexOfChild=this.children.indexOf(child);var that=this;this.childrenWeights.splice(indexOfChild,1);this.childrenWidths.splice(indexOfChild,1);this.columnWidth = d3.sum(this.childrenWidths);this.scale.range([0,this.columnWidth]);this.scale.domain([0,d3.sum(this.childrenWeights)]);this.children.splice(indexOfChild,1);child.parent = null;if(this.children.length < 1){this.emptyColumns = [new LineUp.LayoutEmptyColumn({parent:that})];this.columnWidth = 100;}},addChild:function addChild(child,targetChild,position){if(!(child instanceof LineUp.LayoutNumberColumn)){return false;}var targetIndex=0;if(targetChild instanceof LineUp.LayoutEmptyColumn){this.emptyColumns = [];}else {targetIndex = this.children.indexOf(targetChild);if(position === 'r'){targetIndex++;}}this.childrenWeights.splice(targetIndex,0,this.scale.invert(child.getColumnWidth()));this.childrenWidths.splice(targetIndex,0,child.getColumnWidth());this.columnWidth = d3.sum(this.childrenWidths);this.scale.range([0,this.columnWidth]);this.scale.domain([0,d3.sum(this.childrenWeights)]);child.parent = this;this.children.splice(targetIndex,0,child); //        console.log('added Child:',this.children[targetIndex]);\nreturn true;},description:function description(){var res=LayoutColumn.prototype.description.call(this);res.type = 'stacked';var that=this;res.children = this.children.map(function(d,i){var r=d.description();r.weight = that.childrenWeights[i];return r;});res.label = this.label;return res;},makeCopy:function makeCopy(){var that=this;var description=that.description();description.childrenLinks = [];var res=new LayoutStackedColumn(description,{},that.toLayoutColumn);res.children = that.children.map(function(d){return d.makeCopy();});res.children.forEach(function(d){d.parent = res;});res.childrenWeights = this.childrenWeights.slice(0);res.scale.domain([0,d3.sum(this.childrenWeights)]);res.childrenWidths = this.childrenWeights.map(function(d){return that.scale(d);});return res;}});function LayoutEmptyColumn(spec){LayoutColumn.call(this,spec,[]);this.id = _.uniqueId('empty_');this.label = '{empty}';this.columnWidth = 50;}LineUp.LayoutEmptyColumn = LayoutEmptyColumn;LayoutEmptyColumn.prototype = $.extend({},LayoutColumn.prototype,{getLabel:function getLabel(){return this.label;},getDataID:function getDataID(){return this.id;},getValue:function getValue(){return '';}});function LayoutActionColumn(spec){spec = spec || {};LayoutColumn.call(this,spec,[]);this.id = _.uniqueId('action_');this.label = '';this.columnWidth = spec.width || 50;}LineUp.LayoutActionColumn = LayoutActionColumn;LayoutActionColumn.prototype = $.extend({},LayoutColumn.prototype,{getLabel:function getLabel(){return this.label;},getDataID:function getDataID(){return this.id;},description:function description(){var res=LayoutColumn.prototype.description.call(this);res.type = 'actions';return res;},getValue:function getValue(){return '';}});})(LineUp || (LineUp = {}),d3,jQuery,_); /* global d3, jQuery, window, document */var LineUp;(function(LineUp,d3,$,undefined){LineUp.prototype = LineUp.prototype || {}; /**\n   * creates a simple popup window with a table\n   * @param title\n   * @param label optional if an input field is\n   * @param options optional options like the dimension of the popup\n   * @returns {{popup: *, table: *, remove: remove, onOK: onOK}}\n   */function createPopup(container,title,label,options){options = $.extend({},options,{x:+container.node().clientWidth / 2 - 100,y:100,width:400,height:200}); // ATS: Was d3.select('body').appe...\nvar popupBG=container.append('div') // var popupBG = d3.select(\"body\").append(\"div\")\n.attr(\"class\",\"lu-popupBG\"); // ATS: Was d3.select('body').appe...\nvar popup=container.append('div').attr({\"class\":\"lu-popup\"}).style({left:options.x + \"px\",top:options.y + \"px\",width:options.width + \"px\",height:options.height + \"px\"}).html('<span style=\"font-weight: bold\">' + title + '</span>' + (label?'<input type=\"text\" id=\"popupInputText\" size=\"35\" value=\"' + label + '\"><br>':'') + '<div class=\"selectionTable\"></div>' + '<button class=\"cancel\"><i class=\"fa fa-times\"></i> cancel</button>' + '<button class=\"ok\"><i class=\"fa fa-check\"></i> ok</button>');var theTable=popup.select(\".selectionTable\").style({width:options.width - 10 + \"px\",height:options.height - 40 + \"px\"}).append(\"table\");popup.select(\".cancel\").on(\"click\",function(){popupBG.remove();popup.remove();});return {popup:popup,table:theTable,remove:function remove(){popup.remove();popupBG.remove();},onOK:function onOK(handler){return popup.select(\".ok\").on(\"click\",handler);}};}LineUp.prototype.addNewStackedColumnDialog = function(){var that=this;var popup=createPopup(this.$container,'add stacked column:','Stacked'); // list all data rows !\nvar trData=that.storage.getRawColumns().filter(function(d){return d instanceof LineUp.LineUpNumberColumn;}).map(function(d){return {d:d,isChecked:false,weight:1.0};});var trs=popup.table.selectAll(\"tr\").data(trData);trs.enter().append(\"tr\");trs.append(\"td\").attr(\"class\",\"checkmark\");trs.append(\"td\").attr(\"class\",\"datalabel\").style(\"opacity\",0.8).text(function(d){return d.d.label;});trs.append(\"td\").append(\"input\").attr({'class':\"weightInput\",type:\"text\",value:function value(d){return d.weight;},'disabled':true,size:5}).on(\"input\",function(d){d.weight = +this.value;redraw();});function redraw(){var trs=popup.table.selectAll(\"tr\").data(trData);trs.select(\".checkmark\").html(function(d){return d.isChecked?'<i class=\"fa fa-check-square-o\"></i>':'<i class=\"fa fa-square-o\"></i>';}).on(\"click\",function(d){d.isChecked = !d.isChecked;redraw();});trs.select(\".datalabel\").style(\"opacity\",function(d){return d.isChecked?\"1.0\":\".8\";});trs.select(\".weightInput\").attr('disabled',function(d){return d.isChecked?null:true;});}redraw();function getElementById(id){return $(that.$container.node()).find(\"#\" + id)[0];}popup.onOK(function(){var name=getElementById(\"popupInputText\").value;if(name.length < 1){window.alert(\"name must not be empty\");return;} //console.log(name, trData);\nvar allChecked=trData.filter(function(d){return d.isChecked;}); //console.log(allChecked);\nvar desc={label:name,width:Math.max(allChecked.length * 100,100),children:allChecked.map(function(d){return {column:d.d.column,type:'number',weight:d.weight};})};that.storage.addStackedColumn(desc);popup.remove();that.headerUpdateRequired = true;that.updateAll();});};LineUp.prototype.addNewSingleColumnDialog = function(){var that=this;var popup=createPopup(this.$container,'add single columns',undefined); // list all data rows !\nvar trData=that.storage.getRawColumns() //        .filter(function(d){return (d instanceof LineUpNumberColumn);})\n.map(function(d){return {d:d,isChecked:false,weight:1.0};});var trs=popup.table.selectAll(\"tr\").data(trData);trs.enter().append(\"tr\");trs.append(\"td\").attr(\"class\",\"checkmark\");trs.append(\"td\").attr(\"class\",\"datalabel\").style(\"opacity\",0.8).text(function(d){return d.d.label;});function redraw(){var trs=popup.table.selectAll(\"tr\").data(trData);trs.select(\".checkmark\").html(function(d){return '<i class=\"fa fa-' + (d.isChecked?'check-':'') + 'square-o\"></i>';}).on(\"click\",function(d){d.isChecked = !d.isChecked;redraw();});trs.select(\".datalabel\").style(\"opacity\",function(d){return d.isChecked?\"1.0\":\".8\";});}redraw();popup.onOK(function(){var allChecked=trData.filter(function(d){return d.isChecked;}); //        console.log(allChecked);\n//        var desc = {\n//            label:name,\n//            width:(Math.max(allChecked.length*100,100)),\n//            children:allChecked.map(function(d){return {column: d.d.id, weight: d.weight};})\n//        }\nallChecked.forEach(function(d){that.storage.addSingleColumn({column:d.d.column});});popup.remove();that.headerUpdateRequired = true;that.updateAll();});};LineUp.prototype.reweightStackedColumnWidget = function(data,$table){var toWeight=function toWeight(d){return d.weight;};var predictScale=d3.scale.linear().domain([0,d3.max(data,toWeight)]).range([0,120]);var trs=$table.selectAll(\"tr\").data(data);var config=this.config;trs.enter().append(\"tr\"); //    trs.append(\"td\").attr(\"class\", \"checkmark\")\ntrs.append(\"td\").style({width:\"20px\"}).append(\"input\").attr({'class':\"weightInput\",type:\"text\",value:function value(d){return d.weight;},size:5}).on(\"input\",function(d){data[d.index].weight = +this.value;redraw();});trs.append(\"td\").append(\"div\").attr(\"class\",\"predictBar\").style({width:function width(d){return predictScale(d.weight) + \"px\";},height:20 + \"px\",\"background-color\":function backgroundColor(d){return config.colorMapping.get(d.dataID);}});trs.append(\"td\").attr(\"class\",\"datalabel\").text(function(d){return d.d;});function redraw(){var trs=$table.selectAll(\"tr\").data(data);predictScale.domain([0,d3.max(data,toWeight)]);trs.select(\".predictBar\").transition().style({width:function width(d){return predictScale(d.weight) + \"px\";}});}redraw();};LineUp.prototype.reweightStackedColumnDialog = function(col){var that=this;var popup=createPopup(this.$container,'re-weight column \"' + col.label + '\"',undefined); //console.log(col.childrenWeights);\n// list all data rows !\nvar trData=col.children.map(function(d,i){return {d:d.column.label,dataID:d.getDataID(),weight:+col.childrenWeights[i],index:i};});this.reweightStackedColumnWidget(trData,popup.table);popup.onOK(function(){popup.remove();that.changeWeights(col,trData.map(function(d){return d.weight;}));});};LineUp.prototype.openMappingEditor = function(selectedColumn,$button){var bak=selectedColumn.mapping(),original=selectedColumn.originalMapping();var that=this;var act=bak;var containerHeight=this.$container.node().clientHeight;var height=Math.max(270,Math.min(containerHeight / 2,470)); // ATS: Was d3.select('body').appe...\nvar popup=this.$container.append('div').attr({\"class\":\"lu-popup\"}).style({left:+this.$container.node().clientWidth / 2 - 100 + \"px\",top:100 + \"px\",width:height - 50 + \"px\",height:height + \"px\"}).html('<div style=\"font-weight: bold\"> change mapping: </div>' + '<div class=\"mappingArea\"></div>' + '<label><input type=\"checkbox\" id=\"filterIt\" value=\"filterIt\">Filter Outliers</label><br>' + '<button class=\"cancel\"><i class=\"fa fa-times\"></i> cancel</button>' + '<button class=\"reset\"><i class=\"fa fa-undo\"></i> revert</button>' + '<button class=\"ok\"><i class=\"fa fa-check\"></i> ok</button>');var $filterIt=popup.select('input').on('change',function(){applyMapping(act);});$filterIt.node().checked = Array.isArray(selectedColumn.filter);var access=function access(row){return +selectedColumn.getValue(row,'raw');};function applyMapping(newscale){act = newscale;selectedColumn.mapping(act);var val=$filterIt.node().checked;if(val){selectedColumn.filter = newscale.domain();}else {selectedColumn.filter = undefined;} //console.log(act.domain().toString(), act.range().toString());\n$button.classed('filtered',!isSame(act.range(),original.range()) || !isSame(act.domain(),original.domain()));that.listeners['change-filter'](that,selectedColumn);that.storage.resortData({filteredChanged:true});that.updateAll(true);}var editorOptions={callback:applyMapping,triggerCallback:'dragend',width:height - 50,height:height - 50};var editor=LineUp.mappingEditor(bak,original.domain(),that.storage.rawdata,access,editorOptions);popup.select('.mappingArea').call(editor);function isSame(a,b){return $(a).not(b).length === 0 && $(b).not(a).length === 0;}popup.select(\".ok\").on(\"click\",function(){applyMapping(act);popup.remove();});popup.select('.cancel').on('click',function(){selectedColumn.mapping(bak);$button.classed('filtered',!isSame(bak.range(),original.range()) || !isSame(bak.domain(),original.domain()));popup.remove();});popup.select('.reset').on('click',function(){act = bak = original;applyMapping(original);editor = LineUp.mappingEditor(bak,original.domain(),that.storage.rawdata,access,editorOptions);popup.selectAll('.mappingArea *').remove();popup.select('.mappingArea').call(editor);});}; /**\n   * handles the rendering and action of StackedColumn options menu\n   * @param selectedColumn -- the stacked column\n   */LineUp.prototype.stackedColumnOptionsGui = function(selectedColumn){ //console.log(selectedColumn);\nvar config=this.config;var svgOverlay=this.$header.select('.overlay');var that=this; // remove when clicked on already selected item\nvar disappear=this.stackedColumnModified === selectedColumn;if(disappear){svgOverlay.selectAll('.stackedOption').remove();this.stackedColumnModified = null;return;}function removeStackedColumn(col){that.storage.removeColumn(col);that.headerUpdateRequired = true;that.updateAll();}function renameStackedColumn(col){var x=+window.innerWidth / 2 - 100;var y=+100; // ATS: Was d3.select('body').appe...\nvar popup=this.$container.append('div').attr({'class':'lu-popup'}).style({left:x + 'px',top:y + 'px',width:'200px',height:'70px'}).html('<div style=\"font-weight: bold\"> rename column: </div>' + '<input type=\"text\" id=\"popupInputText\" size=\"20\" value=\"' + col.label + '\"><br>' + '<button class=\"cancel\"><i class=\"fa fa-times\"></i> cancel</button>' + '<button class=\"ok\"><i class=\"fa fa-check\"></i> ok</button>');popup.select('.ok').on('click',function(){var newValue=document.getElementById('popupInputText').value;if(newValue.length > 0){col.label = newValue;that.updateHeader(that.storage.getColumnLayout(col.columnBundle));popup.remove();}else {window.alert('non empty string required');}});popup.select('.cancel').on('click',function(){popup.remove();});} // else:\nthis.stackedColumnModified = selectedColumn;var options=[{name:' remove',action:removeStackedColumn},{name:' rename',action:renameStackedColumn},{name:' re-weight',action:that.reweightStackedColumnDialog}];var menuLength=options.length * 100;var stackedOptions=svgOverlay.selectAll('.stackedOption').data([{d:selectedColumn,o:options}]);stackedOptions.exit().remove();var stackedOptionsEnter=stackedOptions.enter().append('g').attr({'class':'stackedOption','transform':function transform(d){return 'translate(' + (d.d.offsetX + d.d.columnWidth - menuLength) + ',' + (config.htmlLayout.headerHeight / 2 - 2) + ')';}});stackedOptionsEnter.append('rect').attr({x:0,y:0,width:menuLength,height:config.htmlLayout.headerHeight / 2 - 4});stackedOptionsEnter.selectAll('text').data(function(d){return d.o;}).enter().append('text').attr({x:function x(d,i){return i * 100 + 5;},y:config.htmlLayout.headerHeight / 4 - 2}).text(function(d){return d.name;});stackedOptions.selectAll('text').on('click',function(d){svgOverlay.selectAll('.stackedOption').remove();d.action.call(that,selectedColumn);});stackedOptions.transition().attr({'transform':function transform(d){return 'translate(' + (d.d.offsetX + d.d.columnWidth - menuLength) + ',' + (config.htmlLayout.headerHeight / 2 - 2) + ')';}});};LineUp.prototype.openCategoricalFilterPopup = function(column,$button){if(!(column instanceof LineUp.LayoutCategoricalColumn)){ //can't filter other than string columns\nreturn;}var bak=column.filter || []; // ATS: Was d3.select('body').appe...\nvar popup=this.$container.append('div').attr({'class':'lu-popup'}).style({left:+window.innerWidth / 2 - 100 + 'px',top:100 + 'px',width:400 + 'px',height:300 + 'px'}).html('<span style=\"font-weight: bold\">Edit Filter</span>' + '<form onsubmit=\"return false\">' + '<div class=\"selectionTable\"><table><thead><th></th><th>Category</th></thead><tbody></tbody></table></div>' + '<button class=\"ok\"><i class=\"fa fa-check\" title=\"ok\"></i></button>' + '<button class=\"cancel\"><i class=\"fa fa-times\" title=\"cancel\"></i></button>' + '<button class=\"reset\"><i class=\"fa fa-undo\" title=\"reset\"></i></button></form>');popup.select('.selectionTable').style({width:400 - 10 + 'px',height:300 - 40 + 'px'});var that=this; // list all data rows !\nvar trData=column.column.categories.map(function(d){return {d:d,isChecked:bak.length === 0 || bak.indexOf(d) >= 0};});var trs=popup.select('tbody').selectAll('tr').data(trData);trs.enter().append('tr');trs.append('td').attr('class','checkmark');trs.append('td').attr('class','datalabel').text(function(d){return d.d;});function redraw(){var trs=popup.select('tbody').selectAll('tr').data(trData);trs.select('.checkmark').html(function(d){return '<i class=\"fa fa-' + (d.isChecked?'check-':'') + 'square-o\"></i>';}).on('click',function(d){d.isChecked = !d.isChecked;redraw();});trs.select('.datalabel').style('opacity',function(d){return d.isChecked?'1.0':'.8';});}redraw();function updateData(filter){column.filter = filter;$button.classed('filtered',filter && filter.length > 0 && filter.length < column.column.categories.length);that.listeners['change-filter'](that,column);that.storage.resortData({filteredChanged:true});that.updateBody();}popup.select('.cancel').on('click',function(){updateData(bak);popup.remove();});popup.select('.reset').on('click',function(){trData.forEach(function(d){d.isChecked = true;});redraw();updateData(null);});popup.select('.ok').on('click',function(){var f=trData.filter(function(d){return d.isChecked;}).map(function(d){return d.d;});if(f.length === column.column.categories.length){f = [];}updateData(f);popup.remove();});};LineUp.prototype.openFilterPopup = function(column,$button){if(!(column instanceof LineUp.LayoutStringColumn)){ //can't filter other than string columns\nreturn;} // var pos = $(this.$header.node()).offset();\n// pos.left += column.offsetX;\n// // pos.top += column.offsetY;\nvar pos={left:column.offsetX,top:column.offsetY};var bak=column.filter || ''; // ATS: Was d3.select('body').appe...\nvar popup=this.$container.append('div').attr({'class':'lu-popup2'}).style({left:pos.left + 'px',top:pos.top + 'px'}).html('<form onsubmit=\"return false\"><input type=\"text\" id=\"popupInputText\" placeholder=\"containing...\" autofocus=\"true\" size=\"18\" value=\"' + bak + '\"><br>' + '<button class=\"ok\"><i class=\"fa fa-check\" title=\"ok\"></i></button>' + '<button class=\"cancel\"><i class=\"fa fa-times\" title=\"cancel\"></i></button>' + '<button class=\"reset\"><i class=\"fa fa-undo\" title=\"reset\"></i></button></form>');var that=this;function updateData(filter){column.filter = filter;$button.classed('filtered',filter && filter.length > 0);that.listeners['change-filter'](that,column);that.storage.resortData({filteredChanged:true});that.updateBody();}function getElementById(id){return $(that.$container.node()).find(\"#\" + id)[0];}popup.select('.cancel').on('click',function(){getElementById('popupInputText').value = bak;updateData(bak);popup.remove();});popup.select('.reset').on('click',function(){getElementById('popupInputText').value = '';updateData(null);});popup.select('.ok').on('click',function(){updateData(getElementById('popupInputText').value);popup.remove();});};LineUp.createTooltip = function(container){var $container=$(container),$tooltip=$('<div class=\"lu-tooltip\"/>').appendTo($container);function showTooltip(content,xy){$tooltip.html(content).css({left:xy.x + 'px',top:xy.y + xy.height - $container.offset().top + 'px'}).fadeIn();var stickout=$(window).height() + $(window).scrollTop() <= xy.y + xy.height + $tooltip.height() - 20;var stickouttop=$(window).scrollTop() > xy.y - $tooltip.height();if(stickout && !stickouttop){ //if the bottom is not visible move it on top of the box\n$tooltip.css('top',xy.y - $tooltip.height() - $container.offset().top + 'px');}}function hideTooltip(){$tooltip.stop(true).hide();}function moveTooltip(xy){if(xy.x){$tooltip.css({left:xy.x + 'px'});}if(xy.y){$tooltip.css({top:xy.y - $container.offset().top + 'px'});}}function sizeOfTooltip(){return [$tooltip.width(),$tooltip.height()];}function destroyTooltip(){$tooltip.remove();}return {show:showTooltip,hide:hideTooltip,move:moveTooltip,size:sizeOfTooltip,destroy:destroyTooltip};};LineUp.prototype.initScrolling = function($container,topShift){var that=this,container=$container[0],rowHeight=this.config.svgLayout.rowHeight,prevScrollTop=container.scrollTop,jbody=$(this.$table.node()),backupRows=this.config.svgLayout.backupScrollRows,shift;function onScroll(){var act=container.scrollTop;var left=container.scrollLeft; //at least one row changed\nthat.scrolled(act,left);if(Math.abs(prevScrollTop - act) >= rowHeight * backupRows){prevScrollTop = act;that.updateBody();}}$container.on('scroll',onScroll); //the shift between the scroll container our svg body\nshift = jbody.offset().top - $container.offset().top + topShift; //use a resize sensor of a utility lib to also detect resize changes\n//new ResizeSensor($container, function() {\n//  console.log(container.scrollHeight, container.scrollTop, $container.innerHeight(), $container.height(), 'resized');\n//  that.updateBody();\n//});\nfunction selectVisibleRows(data,rowScale){var top=container.scrollTop - shift,bottom=top + $container.innerHeight(),i=0,j; /*console.log(window.matchMedia('print').matches, window.matchMedia('screen').matches, top, bottom);\n      if (typeof window.matchMedia === 'function' && window.matchMedia('print').matches) {\n        console.log('show all');\n        return [0, data.length];\n      }*/if(top > 0){i = Math.round(top / rowHeight); //count up till really even partial rows are visible\nwhile(i >= 0 && rowScale(data[i + 1]) > top) {i--;}i -= backupRows; //one more row as backup for scrolling\n}{ //some parts from the bottom aren't visible\nj = Math.round(bottom / rowHeight); //count down till really even partial rows are visible\nwhile(j <= data.length && rowScale(data[j - 1]) < bottom) {j++;}j += backupRows; //one more row as backup for scrolling\n}return [Math.max(i,0),Math.min(j,data.length)];}return {selectVisible:selectVisibleRows,onScroll:onScroll};};LineUp.prototype.initDragging = function(){var that=this; /*\n     * define dragging behaviour for header weights\n     * */function dragWeightStarted(){d3.event.sourceEvent.stopPropagation();d3.select(this).classed('dragging',true);}function draggedWeight(){var newValue=Math.max(d3.mouse(this.parentNode)[0],2);that.reweightHeader({column:d3.select(this).data()[0],value:newValue});that.updateBody(that.storage.getColumnLayout(),that.storage.getData(),false);}function dragWeightEnded(){d3.select(this).classed('dragging',false);if(that.config.columnBundles.primary.sortedColumn instanceof LineUp.LayoutStackedColumn){that.listeners['change-sortcriteria'](that,that.config.columnBundles.primary.sortedColumn); // ATS: Updates for external\nif(!that.config.sorting || !that.config.sorting.external){that.storage.resortData({column:that.config.columnBundles.primary.sortedColumn});}that.updateBody(that.storage.getColumnLayout(),that.storage.getData(),false);} //        that.updateBody(that.storage.getColumnLayout(), that.storage.getData())\n//      that.updateAll();\n// TODO: integrate columnbundles dynamically !!\n}return d3.behavior.drag().origin(function(d){return d;}).on('dragstart',dragWeightStarted).on('drag',draggedWeight).on('dragend',dragWeightEnded);};})(LineUp || (LineUp = {}),d3,jQuery); /* global d3, jQuery */var LineUp;(function(LineUp,d3,$){'use strict';function addLine($svg,x1,y1,x2,y2,clazz){return $svg.append(\"line\").attr({x1:x1,y1:y1,x2:x2,y2:y2,'class':clazz});}function addText($svg,x,y,text,dy,clazz){dy = dy || null;clazz = clazz || null;return $svg.append(\"text\").attr({x:x,y:y,dy:dy,'class':clazz}).text(text);}function addCircle($svg,x,shift,y,radius){shift -= x;return $svg.append(\"circle\").attr({'class':'handle',r:radius,cx:x,cy:y,transform:'translate(' + shift + ',0)'});}LineUp.mappingEditor = function(scale,dataDomain,data,data_accessor,options){options = $.extend({width:400,height:400,padding:50,radius:10,callback:$.noop,callbackThisArg:null,triggerCallback:'change' //change, dragend\n},options);var editor=function editor($root){var $svg=$root.append('svg').attr({'class':'lugui-me',width:options.width,height:options.height}); //left limit for the axes\nvar lowerLimitX=options.padding; //right limit for the axes\nvar upperLimitX=options.width - options.padding; //location for the score axis\nvar scoreAxisY=options.padding; //location for the raw2pixel value axis\nvar raw2pixelAxisY=options.height - options.padding; //this is needed for filtering the shown datalines\nvar raw2pixel=d3.scale.linear().domain(dataDomain).range([lowerLimitX,upperLimitX]);var normal2pixel=d3.scale.linear().domain([0,1]).range([lowerLimitX,upperLimitX]); //x coordinate for the score axis lower bound\nvar lowerNormalized=normal2pixel(scale.range()[0]); //x coordinate for the score axis upper bound\nvar upperNormalized=normal2pixel(scale.range()[1]); //x coordinate for the raw2pixel axis lower bound\nvar lowerRaw=raw2pixel(scale.domain()[0]); //x coordinate for the raw2pixel axis upper bound\nvar upperRaw=raw2pixel(scale.domain()[1]);scale = d3.scale.linear().clamp(true).domain(scale.domain()).range([lowerNormalized,upperNormalized]);var $base=$svg.append('g'); //upper axis for scored values\naddLine($base,lowerLimitX,scoreAxisY,upperLimitX,scoreAxisY,'axis'); //label for minimum scored value\naddText($base,lowerLimitX,scoreAxisY - 25,0,'.75em'); //label for maximum scored value\naddText($base,upperLimitX,scoreAxisY - 25,1,'.75em');addText($base,options.width / 2,scoreAxisY - 25,'Score','.75em','centered'); //lower axis for raw2pixel values\naddLine($base,lowerLimitX,raw2pixelAxisY,upperLimitX,raw2pixelAxisY,'axis'); //label for minimum raw2pixel value\naddText($base,lowerLimitX,raw2pixelAxisY + 20,dataDomain[0],'.75em'); //label for maximum raw2pixel value\naddText($base,upperLimitX,raw2pixelAxisY + 20,dataDomain[1],'.75em');addText($base,options.width / 2,raw2pixelAxisY + 20,'Raw','.75em','centered'); //lines that show mapping of individual data items\nvar datalines=$svg.append('g').classed('data',true).selectAll('line').data(data);datalines.enter().append('line').attr({x1:function x1(d){return scale(data_accessor(d));},y1:scoreAxisY,x2:function x2(d){return raw2pixel(data_accessor(d));},y2:raw2pixelAxisY}).style('visibility',function(d){var a;if(lowerRaw < upperRaw){a = raw2pixel(data_accessor(d)) < lowerRaw || raw2pixel(data_accessor(d)) > upperRaw;}else {a = raw2pixel(data_accessor(d)) > lowerRaw || raw2pixel(data_accessor(d)) < upperRaw;}return a?'hidden':null;}); //line that defines lower bounds for the scale\nvar mapperLineLowerBounds=addLine($svg,lowerNormalized,scoreAxisY,lowerRaw,raw2pixelAxisY,'bound'); //line that defines upper bounds for the scale\nvar mapperLineUpperBounds=addLine($svg,upperNormalized,scoreAxisY,upperRaw,raw2pixelAxisY,'bound'); //label for lower bound of normalized values\nvar lowerBoundNormalizedLabel=addText($svg,lowerLimitX + 5,scoreAxisY - 15,d3.round(normal2pixel.invert(lowerNormalized),2),'.25em','drag').attr('transform','translate(' + (lowerNormalized - lowerLimitX) + ',0)'); //label for lower bound of raw2pixel values\nvar lowerBoundRawLabel=addText($svg,lowerLimitX + 5,raw2pixelAxisY - 15,d3.round(raw2pixel.invert(lowerRaw),2),'.25em','drag').attr('transform','translate(' + (lowerRaw - lowerLimitX) + ',0)'); //label for upper bound of normalized values\nvar upperBoundNormalizedLabel=addText($svg,upperLimitX + 5,scoreAxisY - 15,d3.round(normal2pixel.invert(upperNormalized),2),'.25em','drag').attr('transform','translate(' + (upperNormalized - upperLimitX) + ',0)'); //label for upper bound of raw2pixel values\nvar upperBoundRawLabel=addText($svg,upperLimitX + 5,raw2pixelAxisY - 15,d3.round(raw2pixel.invert(upperRaw),2),'.25em','drag').attr('transform','translate(' + (upperRaw - upperLimitX) + ',0)');function createDrag(label,move){return d3.behavior.drag().on('dragstart',function(){d3.select(this).classed('dragging',true).attr('r',options.radius * 1.1);label.style('visibility','visible');}).on('drag',move).on('dragend',function(){d3.select(this).classed('dragging',false).attr('r',options.radius);label.style('visibility',null);updateScale(true);}).origin(function(){var t=d3.transform(d3.select(this).attr('transform'));return {x:t.translate[0],y:t.translate[1]};});}function updateNormalized(){scale.range([lowerNormalized,upperNormalized]);datalines.attr('x1',function(d){return scale(data_accessor(d));});updateScale();}function updateRaw(){var hiddenDatalines,shownDatalines;if(lowerRaw < upperRaw){hiddenDatalines = datalines.filter(function(d){return raw2pixel(data_accessor(d)) < lowerRaw || raw2pixel(data_accessor(d)) > upperRaw;});shownDatalines = datalines.filter(function(d){return !(raw2pixel(data_accessor(d)) < lowerRaw || raw2pixel(data_accessor(d)) > upperRaw);});}else {hiddenDatalines = datalines.filter(function(d){return raw2pixel(data_accessor(d)) > lowerRaw || raw2pixel(data_accessor(d)) < upperRaw;});shownDatalines = datalines.filter(function(d){return !(raw2pixel(data_accessor(d)) > lowerRaw || raw2pixel(data_accessor(d)) < upperRaw);});}hiddenDatalines.style('visibility','hidden');scale.domain([raw2pixel.invert(lowerRaw),raw2pixel.invert(upperRaw)]);shownDatalines.style('visibility',null).attr('x1',function(d){return scale(data_accessor(d));});updateScale();} //draggable circle that defines the lower bound of normalized values\naddCircle($svg,lowerLimitX,lowerNormalized,scoreAxisY,options.radius).call(createDrag(lowerBoundNormalizedLabel,function(){if(d3.event.x >= 0 && d3.event.x <= upperLimitX - lowerLimitX){mapperLineLowerBounds.attr('x1',lowerLimitX + d3.event.x);d3.select(this).attr('transform','translate(' + d3.event.x + ', 0)');lowerNormalized = d3.event.x + lowerLimitX;lowerBoundNormalizedLabel.text(d3.round(normal2pixel.invert(lowerNormalized),2)).attr('transform','translate(' + d3.event.x + ', 0)');updateNormalized();}})); //draggable circle that defines the upper bound of normalized values\naddCircle($svg,upperLimitX,upperNormalized,scoreAxisY,options.radius).call(createDrag(upperBoundNormalizedLabel,function(){if(d3.event.x >= -1 * (upperLimitX - lowerLimitX) && d3.event.x <= 0){mapperLineUpperBounds.attr('x1',upperLimitX + d3.event.x);d3.select(this).attr('transform','translate(' + d3.event.x + ', 0)');upperNormalized = d3.event.x + upperLimitX;upperBoundNormalizedLabel.text(d3.round(normal2pixel.invert(upperNormalized),2)).attr('transform','translate(' + d3.event.x + ', 0)');updateNormalized();}})); //draggable circle that defines the lower bound of raw2pixel values\naddCircle($svg,lowerLimitX,lowerRaw,raw2pixelAxisY,options.radius).call(createDrag(lowerBoundRawLabel,function(){if(d3.event.x >= 0 && d3.event.x <= upperLimitX - lowerLimitX){mapperLineLowerBounds.attr('x2',lowerLimitX + d3.event.x);d3.select(this).attr('transform','translate(' + d3.event.x + ', 0)');lowerRaw = d3.event.x + lowerLimitX;lowerBoundRawLabel.text(d3.round(raw2pixel.invert(lowerRaw),2)).attr('transform','translate(' + d3.event.x + ', 0)');updateRaw();}})); //draggable circle that defines the upper bound of raw2pixel values\naddCircle($svg,upperLimitX,upperRaw,raw2pixelAxisY,options.radius).call(createDrag(upperBoundRawLabel,function(){if(d3.event.x >= -1 * (upperLimitX - lowerLimitX) && d3.event.x <= 0){mapperLineUpperBounds.attr('x2',upperLimitX + d3.event.x);d3.select(this).attr('transform','translate(' + d3.event.x + ', 0)');upperRaw = d3.event.x + upperLimitX;upperBoundRawLabel.text(d3.round(raw2pixel.invert(upperRaw),2)).attr('transform','translate(' + d3.event.x + ', 0)');updateRaw();}}));function updateScale(isDragEnd){if(isDragEnd !== (options.triggerCallback === 'dragend')){return;}var newScale=d3.scale.linear().domain([raw2pixel.invert(lowerRaw),raw2pixel.invert(upperRaw)]).range([normal2pixel.invert(lowerNormalized),normal2pixel.invert(upperNormalized)]);options.callback.call(options.callbackThisArg,newScale);}};return editor;};})(LineUp || (LineUp = {}),d3,jQuery); /* global d3, jQuery, _ */var LineUp;(function(LineUp,d3,$,_,undefined){function bundleSetter(bundle){return function setBundle(col){col.columnBundle = bundle;if(col instanceof LineUp.LayoutStackedColumn){col.children.forEach(setBundle);}};} /**\n   * An implementation of data storage for reading locally\n   * @param tableId\n   * @param data\n   * @param columns\n   * @param config\n   * @class\n   */function LineUpLocalStorage(data,columns,layout,primaryKey,storageConfig){this.storageConfig = $.extend(true,{},{colTypes:{'number':LineUp.LineUpNumberColumn,'string':LineUp.LineUpStringColumn,'categorical':LineUp.LineUpCategoricalColumn},layoutColumnTypes:{'number':LineUp.LayoutNumberColumn,'single':LineUp.LayoutStringColumn,'string':LineUp.LayoutStringColumn,'categorical':LineUp.LayoutCategoricalColumn,'categoricalcolor':LineUp.LayoutCategoricalColorColumn,'stacked':LineUp.LayoutStackedColumn,'rank':LineUp.LayoutRankColumn,'actions':LineUp.LayoutActionColumn}},storageConfig);this.config = null; //will be injected by lineup\nvar colTypes=this.storageConfig.colTypes;var layoutColumnTypes=this.storageConfig.layoutColumnTypes;var that=this;function toColumn(desc){return new colTypes[desc.type](desc,toColumn,data);}this.storageConfig.toColumn = toColumn;this.primaryKey = primaryKey;this.rawdata = data;this.selected = d3.set();this.rawcols = columns.map(toColumn);this.layout = layout || LineUpLocalStorage.generateDefaultLayout(this.rawcols);var colLookup=d3.map();this.rawcols.forEach(function(col){colLookup.set(col.column,col);});function toLayoutColumn(desc){var type=desc.type || 'single';if(type === 'single'){var col=colLookup.get(desc.column);if(col instanceof LineUp.LineUpNumberColumn){type = 'number';}else if(col instanceof LineUp.LineUpCategoricalColumn){type = 'categorical';}}return new layoutColumnTypes[type](desc,colLookup,toLayoutColumn,that);}this.storageConfig.toLayoutColumn = toLayoutColumn;var bundles=this.bundles = {};Object.keys(this.layout).forEach(function(l){bundles[l] = {layoutColumns:[],needsLayout:true, // this triggers the layout generation at first access to \"getColumnLayout\"\ndata:data,initialSort:true};});}LineUp.LineUpLocalStorage = LineUpLocalStorage;LineUp.createLocalStorage = function(data,columns,layout,primaryKey,storageConfig){return new LineUpLocalStorage(data,columns,layout,primaryKey,storageConfig);}; /**\n   * generate a default layout by just showing all columns with 100 px\n   * @param columns\n   * @returns {{primary: (Array|*)}}\n   */LineUpLocalStorage.generateDefaultLayout = function(columns){var layout=columns.map(function(c){return {column:c.column,width:c instanceof LineUp.LineUpStringColumn?200:100};});return {primary:layout};};LineUpLocalStorage.prototype = $.extend({},{}, /** @lends LineUpLocalStorage.prototype */{getRawColumns:function getRawColumns(){return this.rawcols;},getColumnLayout:function getColumnLayout(key){var _key=key || \"primary\";if(this.bundles[_key].needsLayout){this.generateLayout(this.layout,_key);this.bundles[_key].needsLayout = false;}return this.bundles[_key].layoutColumns;},isSelected:function isSelected(row){return this.selected.has(row[this.primaryKey]);},select:function select(row){this.selected.add(row[this.primaryKey]);},selectAll:function selectAll(rows){var that=this;rows.forEach(function(row){that.selected.add(row[that.primaryKey]);});},setSelection:function setSelection(rows){this.clearSelection();this.selectAll(rows);},deselect:function deselect(row){this.selected.remove(row[this.primaryKey]);},selectedRows:function selectedRows(){return this.rawdata.filter(this.isSelected.bind(this));},clearSelection:function clearSelection(){this.selected = d3.set();}, /**\n       *  get the data\n       *  @returns data\n       */getData:function getData(bundle){bundle = bundle || \"primary\";return this.bundles[bundle].data;},filterData:function filterData(columns){var flat=[];columns.forEach(function(d){d.flattenMe(flat);});flat = flat.filter(function(d){return d.isFiltered();});if($.isFunction(this.config.filter.filter)){flat.push(this.config.filter.filter);}if(flat.length === 0){return this.rawdata;}else {return this.rawdata.filter(function(row){return flat.every(function(f){return f.filterBy(row);});});}},resortData:function resortData(spec){var _key=spec.key || 'primary',that=this;var bundle=this.bundles[_key];var asc=spec.asc || this.config.columnBundles[_key].sortingOrderAsc;var column=spec.column || this.config.columnBundles[_key].sortedColumn; //console.log('resort: ', spec);\nvar cols=this.getColumnLayout(_key);bundle.data = this.filterData(cols);if(spec.filteredChanged || bundle.initialSort){ //trigger column updates\nvar flat=[];cols.forEach(function(d){d.flattenMe(flat);});flat.forEach(function(col){col.prepare(bundle.data,that.config.renderingOptions.histograms);});bundle.initialSort = false;}var primary=this.primaryKey;function sort(a,b){var r=column.sortBy(a,b);if(r === 0 || isNaN(r)){ //by default sort by primary key\nreturn d3.ascending(a[primary],b[primary]);}return asc?-r:r;}if(column){bundle.data.sort(sort);}var start=this.config.filter.skip?this.config.filter.skip:0;if(this.config.filter.limit && isFinite(this.config.filter.limit)){bundle.data = bundle.data.slice(start,start + this.config.filter.limit);}else {bundle.data = bundle.data.slice(start);}var rankColumn=bundle.layoutColumns.filter(function(d){return d instanceof LineUp.LayoutRankColumn;});if(rankColumn.length > 0){var accessor=function accessor(d,i){return i;};if(column){accessor = function(d){return column.getValue(d);};}this.assignRanks(bundle.data,accessor,rankColumn);}}, /*\n       * assigns the ranks to the data which is expected to be sorted in decreasing order\n       * */assignRanks:function assignRanks(data,accessor,rankColumns){var actualRank=1;var actualValue=-1;data.forEach(function(row,i){if(actualValue === -1){actualValue = accessor(row,i);}if(actualValue !== accessor(row,i)){actualRank = i + 1; //we have 1,1,3, not 1,1,2\nactualValue = accessor(row,i);}rankColumns.forEach(function(r){r.setValue(row,actualRank);});});},generateLayout:function generateLayout(layout,bundle){var _bundle=bundle || 'primary'; // create Rank Column\n//            new LayoutRankColumn();\nvar b=this.bundles[_bundle];b.layoutColumns = layout[_bundle].map(this.storageConfig.toLayoutColumn); //console.log(b.layoutColumns, layout);\n//if there is no rank column create one\nif(b.layoutColumns.filter(function(d){return d instanceof LineUp.LayoutRankColumn;}).length < 1){b.layoutColumns.unshift(new LineUp.LayoutRankColumn(null,null,null,this));} //if we have row actions and no action column create one\nif(this.config.svgLayout.rowActions.length > 0 && b.layoutColumns.filter(function(d){return d instanceof LineUp.LayoutActionColumn;}).length < 1){b.layoutColumns.push(new LineUp.LayoutActionColumn());} //set layout bundle reference\nb.layoutColumns.forEach(bundleSetter(_bundle));},addColumn:function addColumn(col,bundle,position){var _bundle=bundle || 'primary';var cols=this.bundles[_bundle].layoutColumns,i,c; //insert the new column after the first non rank, text column\nif(typeof position === 'undefined' || position === null){for(i = 0;i < cols.length;++i) {c = cols[i];if(c instanceof LineUp.LayoutRankColumn || c instanceof LineUp.LayoutStringColumn){continue;}break;}}else {if(position < 0){position = cols.length + 1 + position;}i = Math.max(0,Math.min(cols.length,position));}col.columnBundle = _bundle;cols.splice(i,0,col);},addStackedColumn:function addStackedColumn(spec,position,bundle){var _spec=$.extend({type:'stacked',label:'Stacked',children:[]},spec);this.addColumn(this.storageConfig.toLayoutColumn(_spec),bundle,position);},addSingleColumn:function addSingleColumn(spec,position,bundle){this.addColumn(this.storageConfig.toLayoutColumn(spec),bundle,position);},removeColumn:function removeColumn(col){var headerColumns=this.bundles[col.columnBundle].layoutColumns;if(col instanceof LineUp.LayoutStackedColumn){var indexOfElement=_.indexOf(headerColumns,col); //function(c){ return (c.id == d.id)});\nif(indexOfElement !== undefined){var addColumns=[]; //                d.children.forEach(function(ch){\n//\n//                    // if there is NO column of same data type\n//                   if (headerColumns.filter(function (hc) {return hc.getDataID() == ch.getDataID()}).length ==0){\n//                       ch.parent=null;\n//                       addColumns.push(ch);\n//                   }\n//\n//                })\n//                headerColumns.splice(indexOfElement,1,addColumns)\nArray.prototype.splice.apply(headerColumns,[indexOfElement,1].concat(addColumns));}}else if(col.column){if(col.parent === null || col.parent === undefined){headerColumns.splice(headerColumns.indexOf(col),1);}else {col.parent.removeChild(col);this.resortData({});}}},moveColumn:function moveColumn(column,targetColumn,position){var sourceColumns=this.bundles[column.columnBundle].layoutColumns,targetColumns=this.bundles[targetColumn.columnBundle].layoutColumns,targetIndex; // different cases:\nif(column.parent == null && targetColumn.parent == null){ // simple L1 Column movement:\nsourceColumns.splice(sourceColumns.indexOf(column),1);targetIndex = targetColumns.indexOf(targetColumn);if(position === 'r'){targetIndex++;}targetColumns.splice(targetIndex,0,column);}else if(column.parent !== null && targetColumn.parent === null){ // move from stacked Column\ncolumn.parent.removeChild(column);targetIndex = targetColumns.indexOf(targetColumn);if(position === 'r'){targetIndex++;}targetColumns.splice(targetIndex,0,column);}else if(column.parent === null && targetColumn.parent !== null){ // move into stacked Column\nif(targetColumn.parent.addChild(column,targetColumn,position)){sourceColumns.splice(sourceColumns.indexOf(column),1);}}else if(column.parent !== null && targetColumn.parent !== null){ // move from Stacked into stacked Column\ncolumn.parent.removeChild(column);targetColumn.parent.addChild(column,targetColumn,position);}bundleSetter(targetColumn.columnBundle)(column);this.resortData({});},copyColumn:function copyColumn(column,targetColumn,position){var targetColumns=this.bundles[targetColumn.columnBundle].layoutColumns;var newColumn=column.makeCopy();bundleSetter(targetColumn.columnBundle)(newColumn); // different cases:\nif(targetColumn.parent == null){var targetIndex=targetColumns.indexOf(targetColumn);if(position === 'r'){targetIndex++;}targetColumns.splice(targetIndex,0,newColumn);}else if(targetColumn.parent !== null){ // copy into stacked Column\ntargetColumn.parent.addChild(newColumn,targetColumn,position);}this.resortData({});}, /**\n       * returns a column by name\n       * @param name\n       * @returns {*}\n       */getColumnByName:function getColumnByName(name){var cols=this.getColumnLayout();for(var i=cols.length - 1;i >= 0;--i) {var col=cols[i];if(col.getLabel() === name || col.column && col.column.column === name){return col;}}return null;}});})(LineUp || (LineUp = {}),d3,jQuery,_); /* global d3, jQuery, document */var LineUp;(function(LineUp,d3,$,undefined){LineUp.prototype = LineUp.prototype || {};LineUp.updateClipPaths = function(headers,svg,prefix,shift,defclass){defclass = defclass || 'column'; //generate clip paths for the text columns to avoid text overflow\n//see http://stackoverflow.com/questions/11742812/cannot-select-svg-foreignobject-element-in-d3\n//there is a bug in webkit which present camelCase selectors\nvar textClipPath=svg.select('defs.' + defclass).selectAll(function(){return this.getElementsByTagName('clipPath');}).data(headers,function(d){return d.id;});textClipPath.enter().append('clipPath').attr('id',function(d){return 'clip-' + prefix + d.id;}).append('rect').attr({y:0,height:'1000'});textClipPath.exit().remove();textClipPath.select('rect').attr({x:function x(d){return shift?d.offsetX:null;},width:function width(d){return Math.max(d.getColumnWidth() - 5,0);}});};function updateText(allHeaders,allRows,svg,config){ // -- the text columns\nvar allTextHeaders=allHeaders.filter(function(d){return d instanceof LineUp.LayoutCategoricalColumn || d instanceof LineUp.LayoutStringColumn || d instanceof LineUp.LayoutRankColumn;});var rowCenter=config.svgLayout.rowHeight / 2;var textRows=allRows.selectAll('.tableData.text').data(function(d){var dd=allTextHeaders.map(function(column){return {value:column.getValue(d),label:column.getValue(d,'raw'),offsetX:column.offsetX,columnW:column.getColumnWidth(),isRank:column instanceof LineUp.LayoutRankColumn,clip:'url(#clip-B' + column.id + ')'};});return dd;});textRows.enter().append('text').attr({'class':function _class(d){return 'tableData text' + (d.isRank?' rank':'');},y:rowCenter,'clip-path':function clipPath(d){return d.clip;}});textRows.exit().remove();textRows.attr('x',function(d){return d.offsetX;}).attr({ // ATS: Added this fix to for updated text rows, they weren't getting updated clip paths\n'clip-path':function clipPath(d){return d.clip;}}).text(function(d){return d.label;});allRows.selectAll('.tableData.text.rank').text(function(d){return d.label;}); // only changed texts:\n///// TODO ---- IMPORTANT  ----- DO NOT DELETE\n//            data.push({key:'rank',value:d['rank']});// TODO: use Rank column\n//    allRows.selectAll('.tableData.text.rank')\n//        .data(function(d){\n////            console.log(d);\n//            return [{key:'rank',value:d['rank']}]\n//        }\n//    )\n}function updateCategorical(allHeaders,allRows,svg,config){ // -- the text columns\nvar allTextHeaders=allHeaders.filter(function(d){return d instanceof LineUp.LayoutCategoricalColorColumn;});var icon=config.svgLayout.rowHeight - config.svgLayout.rowBarPadding * 2;var textRows=allRows.selectAll('.tableData.cat').data(function(d){var dd=allTextHeaders.map(function(column){return {value:column.getValue(d),label:column.getValue(d,'raw'),offsetX:column.offsetX,columnW:column.getColumnWidth(),color:column.getColor(d),clip:'url(#clip-B' + column.id + ')'};});return dd;});textRows.enter().append('rect').attr({'class':'tableData cat',y:config.svgLayout.rowBarPadding,height:config.svgLayout.rowHeight - config.svgLayout.rowBarPadding * 2,width:icon}).append('title');textRows.exit().remove();textRows.attr('x',function(d){return d.offsetX + 2;}).style('fill',function(d){return d.color;}).select('title').text(function(d){return d.label;});}function showStacked(config){ //if not enabled or values are shown\nif(!config.renderingOptions.stacked || config.renderingOptions.values){return false;} //primary is a stacked one\nvar current=config.columnBundles.primary.sortedColumn;return !(current && current.parent instanceof LineUp.LayoutStackedColumn);}function updateSingleBars(headers,allRows,config){ // -- handle the Single columns  (!! use unflattened headers for filtering)\nvar allSingleBarHeaders=headers.filter(function(d){return d.column instanceof LineUp.LineUpNumberColumn;});var barRows=allRows.selectAll('.tableData.bar').data(function(d){var data=allSingleBarHeaders.map(function(column){return {key:column.getDataID(),value:column.getWidth(d),label:column.column.getRawValue(d),offsetX:column.offsetX};});return data;});barRows.enter().append('rect').attr({'class':'tableData bar',y:config.svgLayout.rowBarPadding,height:config.svgLayout.rowHeight - config.svgLayout.rowBarPadding * 2});barRows.exit().remove();barRows.attr({x:function x(d){return d.offsetX;},width:function width(d){return Math.max(+d.value - 2,0);}}).style({fill:function fill(d){return config.colorMapping.get(d.key);}});}function updateStackBars(headers,allRows,_stackTransition,config){ // -- RENDER the stacked columns (update, exit, enter)\nvar allStackedHeaders=headers.filter(function(d){return d instanceof LineUp.LayoutStackedColumn;}); // -- render StackColumnGroups\nvar stackRows=allRows.selectAll('.tableData.stacked').data(function(d){var dd=allStackedHeaders.map(function(column){return {key:column.getDataID(),childs:column.children,parent:column,row:d};});return dd;});stackRows.exit().remove();stackRows.enter().append('g').attr('class','tableData stacked');stackRows.attr('transform',function(d){return 'translate(' + d.parent.offsetX + ',' + 0 + ')';}); // -- render all Bars in the Group\nvar allStackOffset=0;var allStackW=0;var allStackRes={};var asStacked=showStacked(config);var allStack=stackRows.selectAll('rect').data(function(d){allStackOffset = 0;allStackW = 0;return d.childs.map(function(child){allStackW = child.getWidth(d.row);allStackRes = {child:child,width:allStackW,offsetX:allStackOffset};if(asStacked){allStackOffset += allStackW;}else {allStackOffset += child.getColumnWidth();}return allStackRes;});});allStack.exit().remove();allStack.enter().append('rect').attr({y:config.svgLayout.rowBarPadding,height:config.svgLayout.rowHeight - config.svgLayout.rowBarPadding * 2});(_stackTransition?allStack.transition(config.svgLayout.animationDuration):allStack).attr({x:function x(d){return d.offsetX;},width:function width(d){return d.width > 2?d.width - 2:d.width;}}).style({fill:function fill(d){return config.colorMapping.get(d.child.getDataID());}});}function createActions($elem,item,config){var $r=$elem.selectAll('text').data(config.svgLayout.rowActions);$r.enter().append('text').append('title');$r.exit().remove();$r.attr('x',function(d,i){return i * config.svgLayout.rowHeight;}).text(function(d){return d.icon;}).on('click',function(d){d.action.call(this,item.data,d);}).select('title').text(function(d){return d.name;});}function updateActionBars(headers,allRows,config){ // -- handle the Single columns  (!! use unflattened headers for filtering)\nvar allActionBarHeaders=headers.filter(function(d){return d instanceof LineUp.LayoutActionColumn;});var actionRows=allRows.selectAll('.tableData.action').data(function(d){var dd=allActionBarHeaders.map(function(column){return {key:column.getDataID(),value:column.getColumnWidth(d),data:d,offsetX:column.offsetX};});return dd;});actionRows.enter().append('g').attr('class','tableData action').each(function(item){createActions(d3.select(this),item,config);});actionRows.exit().remove();actionRows.attr('transform',function(d){return 'translate(' + (d.offsetX + 10) + ',' + (config.svgLayout.rowHeight * 0.5 + 1) + ')';});}function createRepr(col,row){var r=col.getValue(row,'raw');if(col instanceof LineUp.LayoutNumberColumn || col instanceof LineUp.LayoutStackedColumn){r = r === null || typeof r === 'undefined'?0:isNaN(r) || r.toString() === ''?'':+r;}return r;}function generateTooltip(row,headers,config){var $table=$('<div><table><thead><tr><th>Column</th><th>Value</th></tr></thead><tbody></tbody></table></div>');var $body=$table.find('tbody');headers.forEach(function(header){var r=createRepr(header,row);if(typeof r === 'undefined'){r = '';}else if(typeof r === 'number'){r = config.numberformat(r);}$('<tr><th>' + header.getLabel() + '</th><td>' + r + '</td></tr>').appendTo($body);});return $table.html();} /**\n  * select one or more rows\n  * @param row\n */LineUp.prototype.select = function(row){var primaryKey=this.storage.primaryKey,$rows=this.$body.selectAll('.row');if(Array.isArray(row)){this.storage.setSelection(row);row = row.map(function(d){return d[primaryKey];}); // ATS: Made this >= 0 instead of > 0, cause it could be at index 0\n$rows.classed('selected',function(d){return row.indexOf(d[primaryKey]) >= 0;});}else if(row){this.storage.setSelection([row]);$rows.classed('selected',function(d){return d[primaryKey] === row[primaryKey];});}else {this.storage.clearSelection();$rows.classed('selected',false);}}; /**\n   * updates the table body\n   * @param headers - the headers as in {@link updateHeader}\n   * @param data - the data array from {@link LineUpLocalStorage.prototype#getData()}\n   */LineUp.prototype.updateBody = function(headers,data,stackTransition){if(Array.isArray(headers) && headers.length === 0){return;} //default values\nheaders = headers || this.storage.getColumnLayout();data = data || this.storage.getData(headers[0].columnBundle);stackTransition = stackTransition || false;var svg=this.$body;var that=this;var primaryKey=this.storage.primaryKey;var zeroFormat=d3.format('.1f');var bundle=this.config.columnBundles[headers[0].columnBundle]; //console.log('bupdate');\nstackTransition = stackTransition || false;var allHeaders=[];headers.forEach(function(d){d.flattenMe(allHeaders);});var datLength=data.length,rawData=data;var rowScale=d3.scale.ordinal().domain(data.map(function(d){var value=d[primaryKey];return value === null || typeof value === 'undefined'?'':value;})).rangeBands([0,datLength * that.config.svgLayout.rowHeight],0,that.config.svgLayout.rowPadding),prevRowScale=bundle.prevRowScale || rowScale; //backup the rowscale from the previous call to have a previous 'old' position\nbundle.prevRowScale = rowScale;var headerShift=0;if(that.config.svgLayout.mode === 'combined'){headerShift = that.config.htmlLayout.headerHeight;}this.$bodySVG.attr('height',datLength * that.config.svgLayout.rowHeight + headerShift);var visibleRange=this.selectVisible(data,rowScale);if(visibleRange[0] > 0 || visibleRange[1] < data.length){data = data.slice(visibleRange[0],visibleRange[1]);} // -- handle all row groups\nvar allRowsSuper=svg.selectAll('.row').data(data,function(d){return d[primaryKey];});allRowsSuper.exit().remove(); // --- append ---\nvar allRowsSuperEnter=allRowsSuper.enter().append('g').attr({'class':'row',transform:function transform(d){ //init with its previous position\nvar prev=prevRowScale(d[primaryKey]);if(typeof prev === 'undefined'){ //if not defined from the bottom\nvar range=rowScale.range();if(range && range.length > 0){prev = range[range.length - 1];}else {prev = 0;}}return 'translate(' + 0 + ',' + prev + ')';}});allRowsSuperEnter.append('rect').attr({'class':'filler',width:'100%',height:that.config.svgLayout.rowHeight}); //    //--- update ---\n(this.config.renderingOptions.animation?allRowsSuper.transition().duration(this.config.svgLayout.animationDuration):allRowsSuper).attr({'transform':function transform(d){var value=d[primaryKey];return 'translate(' + 0 + ',' + (value === null || typeof value === 'undefined'?0:rowScale(value)) + ')';}});var asStacked=showStacked(this.config);function createOverlays(row){var textOverlays=[];function toValue(v){if(isNaN(v) || v === '' || typeof v === 'undefined'){return '';}return that.config.numberformat(+v);}headers.forEach(function(col){if(col.column instanceof LineUp.LineUpNumberColumn){textOverlays.push({id:col.id,value:col.getValue(row),label:that.config.numberformat(+col.getValue(row,'raw')),x:col.offsetX,w:col.getColumnWidth()});}else if(col instanceof LineUp.LayoutStackedColumn){var allStackOffset=0;col.children.forEach(function(child){var allStackW=child.getWidth(row);textOverlays.push({id:child.id,label:toValue(child.getValue(row,'raw')) + ' -> (' + zeroFormat(child.getWidth(row)) + ')',w:asStacked?allStackW:child.getColumnWidth(),x:allStackOffset + col.offsetX});if(asStacked){allStackOffset += allStackW;}else {allStackOffset += child.getColumnWidth();}});}});return textOverlays;}function renderOverlays($row,textOverlays,clazz,clipPrefix){$row.selectAll('text.' + clazz).data(textOverlays).enter().append('text').attr({'class':'tableData ' + clazz,x:function x(d){return d.x;},y:that.config.svgLayout.rowHeight / 2,'clip-path':function clipPath(d){return 'url(#clip-' + clipPrefix + d.id + ')';}}).text(function(d){return d.label;});}allRowsSuper.on({mouseenter:function mouseenter(row){var $row=d3.select(this);$row.classed('hover',true); //            d3.select(this.parent).classed('hovered', true)\nvar textOverlays=createOverlays(row); //create clip paths which clips the overlay text of the bars\nvar shift=rowScale(row[primaryKey]); //generate clip paths for the text columns to avoid text overflow\n//see http://stackoverflow.com/questions/11742812/cannot-select-svg-foreignobject-element-in-d3\n//there is a bug in webkit which present camelCase selectors\nvar textClipPath=that.$bodySVG.select('defs.overlay').selectAll(function(){return this.getElementsByTagName('clipPath');}).data(textOverlays);textClipPath.enter().append('clipPath').append('rect').attr({height:'1000'});textClipPath.exit().remove();textClipPath.attr('y',shift).attr('id',function(d){return 'clip-M' + d.id;});textClipPath.select('rect').attr({x:function x(d){return d.x;},width:function width(d){return Math.max(d.w - 2,0);}});renderOverlays($row,textOverlays,'hoveronly','M');function absoluteRowPos(elem){var scrollTop=document.documentElement.scrollTop || document.body.scrollTop;var matrix=elem.getScreenCTM(),tbbox=elem.getBBox(),point=that.$bodySVG.node().createSVGPoint();point.x = tbbox.x;point.y = tbbox.y;point = point.matrixTransform(matrix);return scrollTop + point.y;}if(that.config.interaction.tooltips){that.tooltip.show(generateTooltip(row,allHeaders,that.config),{x:d3.event.x + 10,y:absoluteRowPos(this),height:that.config.svgLayout.rowHeight});}that.hoverHistogramBin(row);that.listeners['hover'](row,shift);},mousemove:function mousemove(){if(that.config.interaction.tooltips){that.tooltip.move({x:d3.event.x});}},mouseleave:function mouseleave(){if(that.config.interaction.tooltips){that.tooltip.hide();}that.hoverHistogramBin(null);that.listeners['hover'](null);d3.select(this).classed('hover',false);d3.select(this).selectAll('text.hoveronly').remove();},click:function click(row){var $row=d3.select(this),selected=that.storage.isSelected(row);if(that.config.interaction.multiselect(d3.event)){var allselected=that.storage.selectedRows();if(selected){$row.classed('selected',false);that.storage.deselect(row);if(allselected.length === 1){ //remove the last one\nthat.listeners['selected'](null);} // ATS: Fix, was not removing the deselected one from the allselected list\nallselected.splice(allselected.indexOf(row),1);}else {$row.classed('selected',true);that.storage.select(row);if(that.config.interaction.rangeselect(d3.event) && allselected.length === 1){ //select a range\nvar i=rawData.indexOf(row),j=rawData.indexOf(allselected[0]);if(i < j){allselected = rawData.slice(i,j + 1);}else {allselected = rawData.slice(j,i + 1);}var toSelect=allRowsSuper.filter(function(d){return allselected.indexOf(d) >= 0;}).classed('selected',true).data();that.storage.selectAll(toSelect);}else {allselected.push(row);}if(allselected.length === 1){ //remove the last one\nthat.listeners['selected'](row,null);}}that.listeners['multiselected'](allselected);}else {if(selected){$row.classed('selected',false);that.storage.deselect(row);that.listeners['selected'](null);that.listeners['multiselected']([]);}else {var prev=allRowsSuper.filter('.selected').classed('selected',false);prev = prev.empty?null:prev.datum();$row.classed('selected',true);that.storage.setSelection([row]);that.listeners['selected'](row,prev);that.listeners['multiselected']([row]);}}}});var allRows=allRowsSuper;updateSingleBars(headers,allRows,that.config);updateStackBars(headers,allRows,this.config.renderingOptions.animation && stackTransition,that.config);updateActionBars(headers,allRows,that.config);LineUp.updateClipPaths(allHeaders,this.$bodySVG,'B',true);updateText(allHeaders,allRows,svg,that.config);updateCategorical(allHeaders,allRows,svg,that.config);if(that.config.renderingOptions.values){allRowsSuper.classed('values',true);allRowsSuper.each(function(row){var $row=d3.select(this);renderOverlays($row,createOverlays(row),'valueonly','B');});}else {allRowsSuper.classed('values',false).selectAll('text.valueonly').remove();} //update selections state\nallRowsSuper.classed('selected',function(d){return that.storage.isSelected(d);});};})(LineUp || (LineUp = {}),d3,jQuery); /* global d3, jQuery */var LineUp;(function(LineUp,d3,$,undefined){LineUp.prototype = LineUp.prototype || {};LineUp.prototype.layoutHeaders = function(headers){var offset=0;var config=this.config,headerHeight=config.htmlLayout.headerHeight,headerOffset=config.htmlLayout.headerOffset;headers.forEach(function(d){ //        console.log(d);\nd.offsetX = offset;d.offsetY = headerOffset;d.height = headerHeight - headerOffset * 2;offset += d.getColumnWidth(); //        console.log(d.getColumnWidth());\n}); //console.log(\"layout Headers:\", headers);\n//update all the plusSigns shifts\nvar shift=offset + 4;d3.values(config.svgLayout.plusSigns).forEach(function(addSign){addSign.x = shift;shift += addSign.w + 4;});headers.filter(function(d){return d instanceof LineUp.LayoutStackedColumn;}).forEach(function(d){d.height = headerHeight / 2 - headerOffset * 2;var localOffset=0;var parentOffset=d.offsetX;var allChilds=d.children.concat(d.emptyColumns);allChilds.map(function(child){child.offsetX = parentOffset + localOffset;child.localOffsetX = localOffset;localOffset += child.getColumnWidth();child.offsetY = headerHeight / 2 + headerOffset;child.height = headerHeight / 2 - headerOffset * 2;});});this.totalWidth = shift;}; /**\n   * Render the given headers\n   * @param headers - the array of headers, see {@link LineUpColumn}\n   */LineUp.prototype.updateHeader = function(headers){if(Array.isArray(headers) && headers.length === 0){return;}headers = headers || this.storage.getColumnLayout(); //    console.log('update Header');\nvar rootsvg=this.$header;var svg=rootsvg.select('g.main');var that=this;var config=this.config;if(this.headerUpdateRequired){this.layoutHeaders(headers);this.$headerSVG.attr('width',this.totalWidth);this.$bodySVG.attr('width',this.totalWidth);this.headerUpdateRequired = false;}var allHeaderData=[];headers.forEach(function(d){d.flattenMe(allHeaderData,{addEmptyColumns:true});}); //reverse order to render from right to left\nallHeaderData.reverse();LineUp.updateClipPaths(allHeaderData,this.$headerSVG,'H',false,'columnheader'); //console.log(allHeaderData);\n// -- Handle the header groups (exit,enter, update)\nvar allHeaders=svg.selectAll('.header').data(allHeaderData,function(d){return d.id;});allHeaders.exit().remove(); // --- adding Element to class allHeaders\nvar allHeadersEnter=allHeaders.enter().append('g').attr('class','header').classed('emptyHeader',function(d){return d instanceof LineUp.LayoutEmptyColumn || d instanceof LineUp.LayoutActionColumn;}).classed('nestedHeader',function(d){return d && d.parent instanceof LineUp.LayoutStackedColumn;}).call(function(){that.addResortDragging(this,config);}); // --- changing nodes for allHeaders\nallHeaders.attr('transform',function(d){return 'translate(' + d.offsetX + ',' + d.offsetY + ')';}); // -- handle BackgroundRectangles\nallHeadersEnter.append('rect').attr({'class':'labelBG',y:0}).style('fill',function(d){if(d instanceof LineUp.LayoutEmptyColumn){return 'lightgray';}else if(d.column && config.colorMapping.has(d.column.id)){return config.colorMapping.get(d.column.id);}else {return config.grayColor;}}).on('click',function(d){if(d3.event.defaultPrevented || d instanceof LineUp.LayoutEmptyColumn || d instanceof LineUp.LayoutActionColumn){return;} // no sorting for empty stacked columns !!!\nif(d instanceof LineUp.LayoutStackedColumn && d.children.length < 1){return;}var bundle=config.columnBundles[d.columnBundle]; // TODO: adapt to comparison mode !!\n//same sorting swap order\nif(bundle.sortedColumn !== null && d === bundle.sortedColumn){bundle.sortingOrderAsc = !bundle.sortingOrderAsc;}else {bundle.sortingOrderAsc = d instanceof LineUp.LayoutStringColumn || d instanceof LineUp.LayoutCategoricalColumn || d instanceof LineUp.LayoutRankColumn;}bundle.sortedColumn = d;that.listeners['change-sortcriteria'](this,d,bundle.sortingOrderAsc); // ATS: Updates for external\nif(!that.config.sorting || !that.config.sorting.external){that.storage.resortData({column:d,asc:bundle.sortingOrderAsc});}that.updateAll(false);});allHeaders.select('.labelBG').attr({width:function width(d){return d.getColumnWidth() - 5;},height:function height(d){return d.height;}});allHeadersEnter.append('g').attr('class','hist');var allNumberHeaders=allHeaders.filter(function(d){return d instanceof LineUp.LayoutNumberColumn;});if(this.config.renderingOptions.histograms){allNumberHeaders.selectAll('g.hist').each(function(d){var $this=d3.select(this).attr('transform','scale(1,' + d.height + ')');var h=d.hist;if(!h){return;}var s=d.value2pixel.copy().range([0,d.value2pixel.range()[1] - 5]);var $hist=$this.selectAll('rect').data(h);$hist.enter().append('rect');$hist.attr({x:function x(bin){return s(bin.x);},width:function width(bin){return s(bin.dx);},y:function y(bin){return 1 - bin.y;},height:function height(bin){return bin.y;}});});}else {allNumberHeaders.selectAll('g.hist').selectAll('*').remove();} // -- handle WeightHandle\nif(this.config.manipulative){allHeadersEnter.filter(function(d){return !(d instanceof LineUp.LayoutEmptyColumn) && !(d instanceof LineUp.LayoutActionColumn);}).append('rect').attr({'class':'weightHandle',x:function x(d){return d.getColumnWidth() - 5;},y:0,width:5});allHeaders.select('.weightHandle').attr({x:function x(d){return d.getColumnWidth() - 5;},height:function height(d){return d.height;}}).call(this.dragWeight); // TODO: adopt dragWeight function !\n} // -- handle Text\nallHeadersEnter.append('text').attr({'class':'headerLabel',x:config.htmlLayout.labelLeftPadding});allHeadersEnter.append('title');allHeaders.select('.headerLabel').classed('sortedColumn',function(d){var sc=config.columnBundles[d.columnBundle].sortedColumn;return sc === d;}).attr({y:function y(d){if(d instanceof LineUp.LayoutStackedColumn || d.parent != null){return d.height / 2;}return d.height * 3 / 4;},'clip-path':function clipPath(d){return 'url(#clip-H' + d.id + ')';}}).text(function(d){return d.getLabel();});allHeaders.select('title').text(function(d){return d.getLabel();}); // -- handle the Sort Indicator\nallHeadersEnter.append('text').attr({'class':'headerSort',y:function y(d){return d.height / 2;},x:2});allHeaders.select('.headerSort').text(function(d){var sc=config.columnBundles[d.columnBundle].sortedColumn;return sc === d?config.columnBundles[d.columnBundle].sortingOrderAsc?'':'':'';}).attr({y:function y(d){return d.height / 2;}}); // add info Button to All Stacked Columns\nif(this.config.manipulative){var buttons=[{'class':'stackedColumnInfo',text:'',filter:function filter(d){return d instanceof LineUp.LayoutStackedColumn?[d]:[];},action:function action(d){that.stackedColumnOptionsGui(d);}},{'class':'singleColumnDelete',text:'',filter:function filter(d){return d instanceof LineUp.LayoutStackedColumn || d instanceof LineUp.LayoutEmptyColumn || d instanceof LineUp.LayoutActionColumn?[]:[d];},action:function action(d){that.storage.removeColumn(d);that.headerUpdateRequired = true;that.updateAll();}},{'class':'singleColumnFilter',text:'',filter:function filter(d){return d.column?[d]:[];},offset:config.htmlLayout.buttonWidth,action:function action(d){if(d instanceof LineUp.LayoutStringColumn){that.openFilterPopup(d,d3.select(this));}else if(d instanceof LineUp.LayoutCategoricalColumn){that.openCategoricalFilterPopup(d,d3.select(this));}else if(d instanceof LineUp.LayoutNumberColumn){that.openMappingEditor(d,d3.select(this));}}}];buttons.forEach(function(button){var $button=allHeaders.selectAll('.' + button['class']).data(button.filter);$button.exit().remove();$button.enter().append('text').attr('class','fontawe ' + button['class']).text(button.text).on('click',button.action);$button.attr({x:function x(d){return d.getColumnWidth() - config.htmlLayout.buttonRightPadding - (button.offset || 0);},y:config.htmlLayout.buttonTopPadding});});} // ==================\n// -- Render add ons\n//===================\n// add column signs:\nvar plusButton=d3.values(config.svgLayout.plusSigns);var addColumnButton=svg.selectAll('.addColumnButton').data(plusButton);addColumnButton.exit().remove();var addColumnButtonEnter=addColumnButton.enter().append('g').attr({'class':'addColumnButton'});addColumnButton.attr({'transform':function transform(d){return 'translate(' + d.x + ',' + d.y + ')';}});addColumnButtonEnter.append('rect').attr({x:0,y:0,rx:5,ry:5,width:function width(d){return d.w;},height:function height(d){return d.h;}}).on('click',function(d){if($.isFunction(d.action)){d.action.call(that,d);}else {that[d.action](d);}});addColumnButtonEnter.append('text').attr({x:function x(d){return d.w / 2;},y:function y(d){return d.h / 2;}}).text('');};LineUp.prototype.hoverHistogramBin = function(row){if(!this.config.renderingOptions.histograms){return;}var $hists=this.$header.selectAll('g.hist');$hists.selectAll('rect').classed('hover',false);if(row){this.$header.selectAll('g.hist').each(function(d){if(d instanceof LineUp.LayoutNumberColumn && d.hist){var bin=d.binOf(row);if(bin >= 0){d3.select(this).select('rect:nth-child(' + (bin + 1) + ')').classed('hover',true);}}});}}; // ===============\n// Helperfunctions\n// ===============\nLineUp.prototype.addResortDragging = function(xss){if(!this.config.manipulative){return;}var x=d3.behavior.drag(),that=this,rootsvg=this.$header,svgOverlay=rootsvg.select('g.overlay'),hitted=null,moved=false;x.call(xss);function dragstart(d){if(d instanceof LineUp.LayoutEmptyColumn){return;}d3.event.sourceEvent.stopPropagation(); // silence other listeners\nd3.select(this).classed('dragObject',true);hitted = null;moved = false;}function dragmove(d){if(d instanceof LineUp.LayoutEmptyColumn){return;}moved = true;var dragHeader=svgOverlay.selectAll('.dragHeader').data([d]);var dragHeaderEnter=dragHeader.enter().append('g').attr({'class':'dragHeader'});dragHeaderEnter.append('rect').attr({'class':'labelBG',width:function width(d){return d.getColumnWidth();},height:function height(d){return d.height;}});var x=d3.event.x;var y=d3.event.y;dragHeader.attr('transform',function(){return 'translate(' + (d3.event.x + 3) + ',' + (d3.event.y - 10) + ')';});var allHeaderData=[];that.storage.getColumnLayout().forEach(function(d){d.flattenMe(allHeaderData,{addEmptyColumns:true});});function contains(header,x,y){ //TODO check if types match\nif(x > header.offsetX && x - header.offsetX < header.getColumnWidth()){if(y > header.offsetY && y - header.offsetY < header.height){if(x - header.offsetX < header.getColumnWidth() / 2){return {column:header,insert:'l',tickX:header.offsetX,tickY:header.offsetY,tickH:header.height};}else {return {column:header,insert:'r',tickX:header.offsetX + header.getColumnWidth(),tickY:header.offsetY,tickH:header.height};}}}return null;}var it=0;hitted = null;while(it < allHeaderData.length && hitted == null) {hitted = contains(allHeaderData[it],x,y);it++;} //        console.log(hitted);\nvar columnTick=svgOverlay.selectAll('.columnTick').data(hitted?[hitted]:[]);columnTick.exit().remove();columnTick.enter().append('rect').attr({'class':'columnTick',width:10});columnTick.attr({x:function x(d){return d.tickX - 5;},y:function y(d){return d.tickY;},height:function height(d){return d.tickH;}});}function dragend(d){if(d3.event.defaultPrevented || d instanceof LineUp.LayoutEmptyColumn){return;}d3.select(this).classed('dragObject',false);svgOverlay.selectAll('.dragHeader').remove();svgOverlay.selectAll('.columnTick').remove();if(hitted && hitted.column === this.__data__){return;}if(hitted){ //            console.log('EVENT: ', d3.event);\nif(d3.event.sourceEvent.altKey){that.storage.copyColumn(this.__data__,hitted.column,hitted.insert);}else {that.storage.moveColumn(this.__data__,hitted.column,hitted.insert);} //            that.layoutHeaders(that.storage.getColumnLayout());\nthat.headerUpdateRequired = true;that.updateAll();}if(hitted == null && moved){that.headerUpdateRequired = true;that.storage.removeColumn(this.__data__);that.updateAll();}}x.on('dragstart',dragstart).on('drag',dragmove).on('dragend',dragend);};LineUp.prototype.addNewEmptyStackedColumn = function(){this.storage.addStackedColumn(null,-1);this.headerUpdateRequired = true;this.updateAll();}; /**\n   * called when a Header width changed, calls {@link updateHeader}\n   * @param change - the change information\n   * @param change.column - the changed column, see {@link LineUpColumn}\n   * @param change.value - the new column width\n   */LineUp.prototype.reweightHeader = function(change){ //    console.log(change);\nchange.column.setColumnWidth(change.value);this.headerUpdateRequired = true;this.updateAll();};})(LineUp || (LineUp = {}),d3,jQuery);return LineUp;}if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(12),__webpack_require__(11),__webpack_require__(10)], __WEBPACK_AMD_DEFINE_FACTORY__ = (LineUpLoader), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module === \"object\" && module.exports){ // ATS: newer versions of jquery expect to be called with a window object\nvar __jq=require('jquery');module.exports = LineUpLoader(__jq.extend?__jq:__jq(window),require('d3'),require('underscore'));}else {this.LineUp = LineUpLoader(jQuery,d3,_);} // ATS: Didn't want this, cause I don't want to bundle jquery/d3/underscore with it\n//module.exports = LineUpLoader(jQuery, d3, _);\n}).call(undefined);\n\n/*****************\n ** WEBPACK FOOTER\n ** ./visuals/lineup/lib/lineup.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./visuals/lineup/lib/lineup.js?");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("/**\n * A mixin that adds support for event emitting\n */\nvar EventEmitter = (function () {\n    function EventEmitter() {\n        this.listeners = {};\n    }\n    /**\n     * Adds an event listener for the given event\n     */\n    EventEmitter.prototype.on = function (name, handler) {\n        var _this = this;\n        var listeners = this.listeners[name] = this.listeners[name] || [];\n        listeners.push(handler);\n        return {\n            destroy: function () {\n                _this.off(name, handler);\n            }\n        };\n    };\n    /**\n     * Removes an event listener for the given event\n     */\n    EventEmitter.prototype.off = function (name, handler) {\n        var listeners = this.listeners[name];\n        if (listeners) {\n            var idx = listeners.indexOf(handler);\n            if (idx >= 0) {\n                listeners.splice(idx, 1);\n            }\n        }\n    };\n    /**\n     * Raises the given event\n     */\n    /*protected*/ EventEmitter.prototype.raiseEvent = function (name) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var listeners = this.listeners[name];\n        if (listeners) {\n            listeners.forEach(function (l) {\n                l.apply(_this, args);\n            });\n        }\n    };\n    return EventEmitter;\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = EventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./base/EventEmitter.ts\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./base/EventEmitter.ts?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("var EventEmitter_1 = __webpack_require__(6);\nvar _ = __webpack_require__(2);\nvar LineUpLib = __webpack_require__(5);\n/**\n * Thin wrapper around the lineup library\n */\nvar LineUp = (function () {\n    /**\n     * Constructor for the lineups\n     */\n    function LineUp(element) {\n        var _this = this;\n        /**\n         * The template for the grid\n         */\n        this.template = \"\\n        <div>\\n            <div class=\\\"grid\\\"></div>\\n        </div>\\n    \".trim();\n        /**\n         * A boolean indicating whehter or not we are currently loading more data\n         */\n        this.loadingMoreData = false;\n        this._selectedRows = [];\n        this._selectionEnabled = true;\n        this._isMultiSelect = true;\n        this._settings = $.extend(true, {}, LineUp.DEFAULT_SETTINGS);\n        /**\n         * The configuration for the lineup viewer\n         */\n        this.lineUpConfig = {\n            svgLayout: {\n                mode: 'separate',\n                addPlusSigns: true,\n                plusSigns: {\n                    addStackedColumn: {\n                        name: \"Add a new Stacked Column\",\n                        action: \"addNewEmptyStackedColumn\",\n                        x: 0, y: 2,\n                        w: 21, h: 21 // LineUpGlobal.htmlLayout.headerHeight/2-4\n                    },\n                    addColumn: {\n                        title: \"Add a Column\",\n                        action: function () { return _this.lineupImpl.addNewSingleColumnDialog(); },\n                        x: 0, y: 2,\n                        w: 21, h: 21 // LineUpGlobal.htmlLayout.headerHeight/2-4\n                    }\n                }\n            },\n            interaction: {\n                multiselect: function () { return _this.isMultiSelect; }\n            },\n            sorting: {\n                external: false\n            }\n        };\n        this.element = $(this.template);\n        this._eventEmitter = new EventEmitter_1.default();\n        element.append(this.element);\n    }\n    /**\n     * Gets the data contained in lineup\n     */\n    LineUp.prototype.getData = function () {\n        return this._data;\n    };\n    /**\n     * Loads the data into the lineup view\n     */\n    LineUp.prototype.setData = function (rows) {\n        var _this = this;\n        this._data = rows;\n        //derive a description file\n        var desc = this.configuration || LineUp.createConfigurationFromData(rows);\n        var spec = {};\n        // spec.name = name;\n        spec.dataspec = desc;\n        delete spec.dataspec.file;\n        delete spec.dataspec.separator;\n        spec.dataspec.data = rows;\n        spec.storage = LineUpLib.createLocalStorage(rows, desc.columns, desc.layout, desc.primaryKey);\n        if (this.lineupImpl) {\n            this.lineupImpl.changeDataStorage(spec);\n        }\n        else {\n            var finalOptions = $.extend(true, this.lineUpConfig, { renderingOptions: $.extend(true, {}, this.settings.presentation) });\n            this.lineupImpl = LineUpLib.create(spec, d3.select(this.element.find('.grid')[0]), finalOptions);\n            this.lineupImpl.listeners.on('change-sortcriteria.lineup', function (ele, column, asc) {\n                // This only works for single columns and not grouped columns\n                _this.onLineUpSorted(column && column.column && column.column.id, asc);\n            });\n            this.lineupImpl.listeners.on('change-filter.lineup', function (x, column) { return _this.onLineUpFiltered(column); });\n            var scrolled = this.lineupImpl.scrolled;\n            var me = this;\n            // The use of `function` here is intentional, we need to pass along the correct scope\n            this.lineupImpl.scrolled = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                me.onLineUpScrolled.apply(me, args);\n                return scrolled.apply(this, args);\n            };\n        }\n        this.selection = rows.filter(function (n) { return n.selected; });\n        this.applyConfigurationToLineup();\n        // Store the configuration after it was possibly changed by load data\n        this.saveConfiguration();\n        this.loadingMoreData = false;\n    };\n    /**\n     * Appends data to the end\n     */\n    LineUp.prototype.appendData = function (rows) {\n        // Hack for now\n        this.setData((this._data || []).concat(rows));\n    };\n    Object.defineProperty(LineUp.prototype, \"events\", {\n        /**\n         * Gets the events object\n         */\n        get: function () {\n            return this._eventEmitter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineUp.prototype, \"settings\", {\n        /**\n         * Gets the settings\n         */\n        get: function () {\n            return this._settings;\n        },\n        /**\n         * Sets the settings\n         */\n        set: function (value) {\n            var newSettings = $.extend(true, {}, LineUp.DEFAULT_SETTINGS, value);\n            var singleSelect = newSettings.selection.singleSelect;\n            var multiSelect = newSettings.selection.multiSelect;\n            this.selectionEnabled = singleSelect || multiSelect;\n            this.isMultiSelect = multiSelect;\n            /** Apply the settings to lineup */\n            var externalSort = !!value && !!value.sorting && !!value.sorting.external;\n            if (this.lineupImpl) {\n                this.attachSelectionEvents();\n                var presProps = newSettings.presentation;\n                for (var key in presProps) {\n                    if (presProps.hasOwnProperty(key)) {\n                        this.lineupImpl.changeRenderingOption(key, presProps[key]);\n                    }\n                }\n                this.lineupImpl.config.sorting = { external: externalSort };\n            }\n            this.lineUpConfig.sorting.external = externalSort;\n            this._settings = newSettings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineUp.prototype, \"selection\", {\n        /**\n         * Gets the current selection\n         */\n        get: function () {\n            return this._selectedRows;\n        },\n        /**\n         * Sets the selection of lineup\n         */\n        set: function (value) {\n            this._selectedRows = this.updateRowSelection(value);\n            this.lineupImpl.select(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineUp.prototype, \"configuration\", {\n        /**\n         * Gets this configuration\n         */\n        get: function () {\n            return this._configuration;\n        },\n        /**\n         * Sets the column configuration that is used\n         */\n        set: function (value) {\n            this._configuration = value;\n            this.applyConfigurationToLineup();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineUp.prototype, \"selectionEnabled\", {\n        /**\n         * Getter for selection enabled\n         */\n        get: function () {\n            return this._selectionEnabled;\n        },\n        /**\n         * Setter for selectionEnabled\n         */\n        set: function (value) {\n            this._selectionEnabled = value;\n            this.attachSelectionEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineUp.prototype, \"isMultiSelect\", {\n        /**\n         * Getter for isMultiSelect\n         */\n        get: function () {\n            return this._isMultiSelect;\n        },\n        /**\n         * Setter for isMultiSelect\n         */\n        set: function (value) {\n            this._isMultiSelect = value;\n            this.attachSelectionEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Derives the desciption for the given column\n     */\n    LineUp.createConfigurationFromData = function (data) {\n        var EXCLUDED_DATA_COLS = {\n            selected: true,\n            equals: true,\n        };\n        function getDataColumnNames() {\n            if (data && data.length) {\n                return Object.keys(data[0]).filter(function (k) { return !EXCLUDED_DATA_COLS[k]; });\n            }\n            return [];\n        }\n        function updateMinMax(minMax, value) {\n            if (+value > minMax.max) {\n                minMax.max = value;\n            }\n            else if (+value < minMax.min) {\n                minMax.min = +value;\n            }\n        }\n        function isNumeric(v) {\n            return v === 0 || LineUp.isNumeric(v);\n        }\n        function analyzeColumn(columnName) {\n            var minMax = { min: Number.MAX_VALUE, max: 0 };\n            var allNumeric = data.every(function (row) { return isNumeric(row[columnName]); });\n            if (allNumeric) {\n                data.forEach(function (row) { return updateMinMax(minMax, row[columnName]); });\n            }\n            return { allNumeric: allNumeric, minMax: minMax };\n        }\n        function createLineUpColumn(colName) {\n            var result = { column: colName, type: 'string' };\n            var _a = analyzeColumn(colName), allNumeric = _a.allNumeric, minMax = _a.minMax;\n            if (allNumeric) {\n                result.type = 'number';\n                result.domain = [minMax.min, minMax.max];\n            }\n            // If is a string, try to see if it is a category\n            if (result.type === 'string') {\n                var sset = d3.set(data.map(function (row) { return row[colName]; }));\n                if (sset.size() <= Math.max(20, data.length * 0.2)) {\n                    result.type = 'categorical';\n                    result.categories = sset.values().sort();\n                }\n            }\n            return result;\n        }\n        var dataColNames = getDataColumnNames();\n        var columns = getDataColumnNames().map(createLineUpColumn);\n        return {\n            primaryKey: dataColNames[0],\n            columns: columns\n        };\n    };\n    /**\n     * Gets the sort from lineup\n     */\n    LineUp.prototype.getSortFromLineUp = function () {\n        if (this.lineupImpl && this.lineupImpl.storage) {\n            var primary = this.lineupImpl.storage.config.columnBundles.primary;\n            var col = primary.sortedColumn;\n            if (col) {\n                if (col.column) {\n                    return {\n                        column: col.column.column,\n                        asc: primary.sortingOrderAsc\n                    };\n                }\n                else {\n                }\n            }\n        }\n    };\n    /**\n     * Updates the selected state of each row, and returns all the selected rows\n     */\n    LineUp.prototype.updateRowSelection = function (sels) {\n        this._data.forEach(function (d) { return d.selected = false; });\n        return sels && sels.length ? sels.filter(function (d) { return d.selected = true; }) : [];\n    };\n    /**\n     * Saves the current layout\n     */\n    LineUp.prototype.saveConfiguration = function () {\n        if (!this.savingConfiguration) {\n            this.savingConfiguration = true;\n            //full spec\n            var s = $.extend({}, {}, this.lineupImpl.spec.dataspec);\n            //create current layout\n            var descs = this.lineupImpl.storage.getColumnLayout()\n                .map((function (d) { return d.description(); }));\n            s.layout = _.groupBy(descs, function (d) { return d.columnBundle || \"primary\"; });\n            s.sort = this.getSortFromLineUp();\n            this.configuration = s;\n            delete s['data'];\n            this.raiseConfigurationChanged(this.configuration);\n            this.savingConfiguration = false;\n        }\n    };\n    /**\n     * Applies our external config to lineup\n     */\n    LineUp.prototype.applyConfigurationToLineup = function () {\n        if (this.lineupImpl) {\n            var currentSort = this.getSortFromLineUp();\n            if (this.configuration && this.configuration.sort && (!currentSort || !_.isEqual(currentSort, this.configuration.sort))) {\n                this.sortingFromConfig = true;\n                this.lineupImpl.sortBy(this.configuration.sort.column, this.configuration.sort.asc);\n                this.sortingFromConfig = false;\n            }\n            this.attachSelectionEvents();\n        }\n    };\n    /**\n     * Listener for when the lineup viewer is scrolled\n     */\n    LineUp.prototype.onLineUpScrolled = function () {\n        // truthy this.dataView.metadata.segment means there is more data to be loaded\n        if (!this.loadingMoreData && this.raiseCanLoadMoreData()) {\n            var scrollElement = $(this.lineupImpl.$container.node()).find('div.lu-wrapper')[0];\n            var scrollHeight = scrollElement.scrollHeight;\n            var top = scrollElement.scrollTop;\n            if (scrollHeight - (top + scrollElement.clientHeight) < 200 && scrollHeight >= 200) {\n                this.loadingMoreData = true;\n                this.raiseLoadMoreData();\n            }\n        }\n    };\n    /**\n     * Attaches the line up events to lineup\n     */\n    LineUp.prototype.attachSelectionEvents = function () {\n        var _this = this;\n        if (this.lineupImpl) {\n            // Cleans up events\n            this.lineupImpl.listeners.on(\"multiselected.lineup\", null);\n            this.lineupImpl.listeners.on(\"selected.lineup\", null);\n            if (this.selectionEnabled) {\n                if (this.isMultiSelect) {\n                    this.lineupImpl.listeners.on(\"multiselected.lineup\", function (rows) {\n                        _this._selectedRows = _this.updateRowSelection(rows);\n                        _this.raiseSelectionChanged(rows);\n                    });\n                }\n                else {\n                    this.lineupImpl.listeners.on(\"selected.lineup\", function (row) {\n                        _this._selectedRows = _this.updateRowSelection(row ? [row] : []);\n                        _this.raiseSelectionChanged(_this.selection);\n                    });\n                }\n            }\n        }\n    };\n    /**\n     * Listener for line up being sorted\n     */\n    LineUp.prototype.onLineUpSorted = function (column, asc) {\n        if (!this.sortingFromConfig) {\n            this.saveConfiguration();\n            this.raiseSortChanged(column, asc);\n        }\n    };\n    /**\n     * Listener for lineup being filtered\n     */\n    LineUp.prototype.onLineUpFiltered = function (column) {\n        var colName = column.getLabel();\n        var ourColumn = this.configuration.columns.filter(function (n) { return n.column === colName; })[0];\n        var filter;\n        if (ourColumn.type === \"number\") {\n            filter = {\n                column: colName,\n                value: {\n                    domain: column.scale.domain(),\n                    range: column.scale.range()\n                }\n            };\n        }\n        else {\n            filter = {\n                column: colName,\n                value: column.filter\n            };\n        }\n        this.saveConfiguration();\n        this.raiseFilterChanged(filter);\n    };\n    /**\n     * Raises the configuration changed event\n     */\n    LineUp.prototype.raiseConfigurationChanged = function (configuration) {\n        this.events.raiseEvent(LineUp.EVENTS.CONFIG_CHANGED, configuration);\n    };\n    /**\n     * Raises the filter changed event\n     */\n    LineUp.prototype.raiseSortChanged = function (column, asc) {\n        this.events.raiseEvent(LineUp.EVENTS.SORT_CHANGED, column, asc);\n    };\n    /**\n     * Raises the filter changed event\n     */\n    LineUp.prototype.raiseFilterChanged = function (filter) {\n        this.events.raiseEvent(LineUp.EVENTS.FILTER_CHANGED, filter);\n    };\n    /**\n     * Raises the selection changed event\n     */\n    LineUp.prototype.raiseSelectionChanged = function (rows) {\n        this.events.raiseEvent(LineUp.EVENTS.SELECTION_CHANGED, rows);\n    };\n    /**\n     * Raises the load more data event\n     */\n    LineUp.prototype.raiseLoadMoreData = function () {\n        this.events.raiseEvent(LineUp.EVENTS.LOAD_MORE_DATA);\n    };\n    /**\n     * Raises the can load more data event\n     */\n    LineUp.prototype.raiseCanLoadMoreData = function () {\n        var result = {\n            result: false\n        };\n        this.events.raiseEvent(LineUp.EVENTS.CAN_LOAD_MORE_DATA, result);\n        return result.result;\n    };\n    /**\n     * The list of events that we expose\n     */\n    LineUp.EVENTS = {\n        SORT_CHANGED: \"sortChanged\",\n        FILTER_CHANGED: \"filterChanged\",\n        CONFIG_CHANGED: \"configurationChanged\",\n        SELECTION_CHANGED: \"selectionChanged\",\n        LOAD_MORE_DATA: \"loadMoreData\",\n        CAN_LOAD_MORE_DATA: \"canLoadMoreData\"\n    };\n    /**\n     * Represents the settings\n     */\n    LineUp.DEFAULT_SETTINGS = {\n        selection: {\n            singleSelect: false,\n            multiSelect: true\n        },\n        sorting: {\n            external: false\n        },\n        presentation: {\n            stacked: true,\n            values: false,\n            histograms: true,\n            animation: true\n        }\n    };\n    /**\n     * Returns true if the given object is numeric\n     */\n    LineUp.isNumeric = function (obj) { return (obj - parseFloat(obj) + 1) >= 0; };\n    return LineUp;\n})();\nexports.LineUp = LineUp;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./visuals/lineup/LineUp.ts\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./visuals/lineup/LineUp.ts?");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22React%22?");

/***/ },
/* 9 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22ReactDOM%22?");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"_\"\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22_%22?");

/***/ },
/* 11 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22d3%22?");

/***/ },
/* 12 */
/***/ function(module, exports) {

	eval("module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jQuery\"\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22jQuery%22?");

/***/ }
/******/ ])
});
;